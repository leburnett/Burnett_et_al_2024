%% Exit Analysis

% Main script for the paper Burnett et al. for analysing exits from the
% shelter in the PCF behavioural arena. 

% Generated 26/01/22 by Burnett. 

% Requires table: 'exit_analysis' and array: 'exits' - generated by
% 'make_exit_analysis.m' ran through 'process_dome_data.m' on the PCF
% computer. 

% col = [255/255 114/255 32/255]; 

%% Basic Parameters

n = height(exit_analysis);
all_animals = unique(exit_analysis.Animal);
n_animals = numel(all_animals);

allWT = find((exit_analysis.geno) == 1);
allHET = find((exit_analysis.geno) == 2);

all_animals_WT = unique(exit_analysis.Animal(allWT));
all_animals_HET = unique(exit_analysis.Animal(allHET));

%% Make 'ANIMAL AVERAGES' table for 'exit_analysis' - all DAYS

exit_analysis_animals = zeros(n_animals, 10);

for j = 1:n_animals
    ani = all_animals(j);
    all_ani = find(exit_analysis.Animal == ani & exit_analysis.Day >0);
    if numel(all_ani)>0
        
        geno = exit_analysis.geno(all_ani(1));
        
        % Assign animal number to  first column of table.
        exit_analysis_animals(j,1) = ani;
        exit_analysis_animals(j,2) = geno;
        cv = 3;
        
        for k = [8,9,10, 11, 12, 13, 17, 18]
            if k == 8 || k == 9 % TOTAL NOT AVERAGE EXITS - - - - NEW
                all_vals = table2array(exit_analysis(all_ani, k));
                exit_analysis_animals(j,cv) = sum(all_vals);
            else
                all_vals = table2array(exit_analysis(all_ani, k));
                exit_analysis_animals(j,cv) = nanmean(all_vals);
            end
            cv = cv+1;
        end
    else
        exit_analysis_animals(j,1) = ani;
        exit_analysis_animals(j,2) = geno;
        cv = 3;
    end
end

Animal = exit_analysis_animals(:,1);
Geno = exit_analysis_animals(:,2);
Exits = exit_analysis_animals(:,3);
ExitsThr = exit_analysis_animals(:,4);
MeanD = exit_analysis_animals(:,5);
MaxD = exit_analysis_animals(:,6);
IBI = exit_analysis_animals(:,7);
ExitDur = exit_analysis_animals(:,8);
Bouts = exit_analysis_animals(:,9);
Looms = exit_analysis_animals(:,10);

exits_animals = table(Animal, Geno, Exits, ExitsThr, MeanD, MaxD, IBI, ExitDur, Bouts, Looms);


%% PLOTS % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % 


%% 1 - Dot Box Plot - For analysing specific variables - all trials not animal averages - all days

% Set 'v' as the column number of the variable you are interested in analysing. 
v = 8;

valsWT = [];
valsHET = [];
for i = 1:n
    if exit_analysis.geno(i) == 1 
        val = exit_analysis{i, v};
        valsWT = [valsWT, val];
    elseif exit_analysis.geno(i) == 2 
        val = exit_analysis{i, v};
        valsHET = [valsHET, val];
    end
end

var2 = table2array(exit_analysis(:,v));
grp2 = exit_analysis.geno;

% % % % % % % % % % % 

% PLOT
n_wt = numel(valsWT);
n_het = numel(valsHET);

x1 = ones(1, n_wt);
x2 = ones(1, n_het)*2;

figure
scatter(x1, valsWT,'SizeData', 150, 'MarkerEdgeColor', [0.7 0.7 0.7], 'jitter', 'on', 'jitterAmount', 0.05)
hold on
scatter(x2, valsHET', 'SizeData', 150,'MarkerEdgeColor', col , 'jitter', 'on', 'jitterAmount', 0.05) % [1 0.2 1]
b = boxplot(var2, grp2, 'Colors', 'k');
set(b, 'LineWidth', 1.4)

xticks([1,2])
xticklabels({''})
ax = gca;
ax.FontSize = 25;
box off
axis([0.5 2.5 -0.5 20])
ax.XAxis.Visible = 'off';
% ylabel('Number of Exits')
ax.TickDir = 'out';
ax.TickLength = [0.02 0.02];
ax.LineWidth = 1.5;
f = gcf;
f.Position = [680   844   250   400];

% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

% STATS -  MEAN VALUES
% mWT = nanmean(valsWT);
% mHET =nanmean(valsHET);
% plot(1, mWT, 'k.', 'MarkerSize', 20)
% plot(2, mHET, 'r.', 'MarkerSize', 20)

% % % % STATS % % % % %
nanmean(valsWT)
nanmean(valsHET)
[p,h] = ranksum(valsWT, valsHET)




%%  MEAN SEM PLOT - dot and errorbar vetical line - ANIMAL AVERAGES - ACROSS DAYS - FOR LOOM EXPS. - * - * - * - * - * - * - * - * - *
% col = [1 0.45 0.125]; % PTCHD1

% Set 'v' as the column number of the variable you are interested inanalysing. 
v = 8;

m_per_day = zeros(2,6);
p_per_day = zeros(1,6);

figure

if v ==11
    rectangle('Position', [0.5 14 5 16], 'FaceColor', [1 0.75 0.75, 0.2], 'EdgeColor', 'none')
end 
   
    
for j = 0:5 % FOR EACH DAY 

valsWT = [];
valsHET = [];

for i = 1:n_animals % Loop through finding the average for each animal and add it to valsWT/valsHET
    
    %Define which animal you are looking for this iteration.
    ani = all_animals(i);
    
    % Find the rows corresponding to that animal and that day!
    if j == 0 
    all_ani = find(exit_analysis.Animal == ani & exit_analysis.Day == j);  
    else
       all_ani = find(exit_analysis.Animal == ani & exit_analysis.Day == j);  % & string(exit_analysis.Exp) == "01_Loom"
    end
 
    aa = find(exit_analysis.Animal == ani);
    geno = exit_analysis.geno(aa(1));
    
    if numel(all_ani)>0
        % Find all the values of your variable for this animal
        ani_vals = exit_analysis{all_ani, v};
        if v == 8 || val == 9% for the number of exits want to SUM the number of exits over trials not find the mean 
            val = sum(ani_vals);
        else  
           val = nanmean(ani_vals);
        end
    else
        val = NaN;
    end
    
    if geno == 1
        valsWT = [valsWT, val];
    elseif geno == 2
        valsHET = [valsHET, val];
    end
end


n_wt = numel(valsWT);
n_het = numel(valsHET);


% PLOT
x = j;
y = [nanmean(valsWT), nanmean(valsHET)];

err(1) =  nanstd(valsWT)/sqrt(numel(valsWT));
err(2) =  nanstd(valsHET)/sqrt(numel(valsHET));

% colvals = {[0 0 0]; [1 0.44671 0.1255]};
colvals = {[0 0 0]; [1 0 0]};


% hold on
% for i2 = 1:2
%     scatter(x, y(i2), 250, 'MarkerFaceColor', colvals{i2}, 'MarkerFaceAlpha', 0.5, 'MarkerEdgeColor', 'none')
%     hold on
%     errorbar(x, y(i2), err(i2),'Color',  colvals{i2}, 'CapSize', 7, 'LineWidth', 1.1)
% end

% [1 0.45 0.125]

hold on 
for i2 = 1:2
    if i2 == 1
        errorbar(x, y(i2), err(i2), 'o', 'CapSize', 0, 'Color', colvals{i2}, 'MarkerFaceColor', [0.7 0.7 0.7],'MarkerEdgeColor', 'none',  'MarkerSize', 10, 'LineWidth', 1.75)
        errorbar(x, y(i2), err(i2), 'o', 'CapSize', 0, 'Color', [0.4 0.4 0.4], 'Marker', 'none', 'LineWidth', 1.75)
    elseif i2 ==2
        errorbar(x, y(i2), err(i2), 'o', 'CapSize', 0, 'Color', colvals{i2}, 'MarkerFaceColor', [1 0.7 0.7], 'MarkerEdgeColor','none', 'MarkerSize', 10, 'LineWidth', 1.75)
        errorbar(x, y(i2), err(i2), 'o', 'CapSize', 0, 'Color', [1 0.4 0.4] ,'Marker', 'none', 'LineWidth', 1.75)
    end 
    
end 

m_per_day(1,j+1) = y(1);
m_per_day(2,j+1) = y(2);

[p,h] = ranksum(valsWT, valsHET);
p_per_day(j+1) = p;

end 


ax = gca;
ax.FontSize = 18;
box off
% axis([0.5 5.5 0 9])
axis([-0.5 5.5 0 12])
% ax.XAxis.Visible = 'off';
xticks([0,1,2,3,4,5])
% xticklabels({'0', '1', '2', '3', '4', '5'})
ax.TickDir = 'out';
ax.LineWidth = 1.2;
ax.TickLength = [0.025 0.025];
% ylabel('Shelter Exits')
% xlabel('Day')

% Plot transition between never having seen a loom and having seen a loom. 
plot([0.5 0.5], [0 34], 'k:', 'LineWidth', 1.2)
hold on; plot([1.5 1.5], [0 34], 'b:', 'LineWidth', 1.2)
f = gcf;
% f.Position = [440   554   238   244]; % [440   535   429   263];
f.Position = [760   449   246   278];


%% Dot Box Plot - For analysing specific variables - Average of each animal across all experiments and all days. 

% n = height(exit_analysis);
all_animals = unique(exit_analysis.Animal);
n_animals = numel(all_animals);

% Set 'v' as the column number of the variable you are interested inanalysing. 
v = 3;

valsWT = [];
valsHET = [];
for i = 1:n_animals
    if exits_animals.Geno(i) == 1 
        val = exits_animals{i, v};
        valsWT = [valsWT, val];
    elseif exits_animals.Geno(i) == 2 
        val = exits_animals{i, v};
        valsHET = [valsHET, val];
    end
end

var2 = table2array(exits_animals(:,v));
grp2 = exits_animals.Geno;

% % % % % % % % % % % 

% PLOT
n_wt = numel(valsWT);
n_het = numel(valsHET);

x1 = ones(1, n_wt);
x2 = ones(1, n_het)*2;

figure
scatter(x1, valsWT,'SizeData', 150, 'MarkerEdgeColor', [0.6 0.6 0.6], 'jitter', 'on', 'jitterAmount', 0.05)
hold on
scatter(x2, valsHET', 'SizeData', 150,'MarkerEdgeColor', [1 0 1], 'jitter', 'on', 'jitterAmount', 0.05)
b = boxplot(var2, grp2, 'Colors', 'k');
set(b, 'LineWidth', 1.5)


xticks([1,2])
xticklabels({''})
ax = gca;
ax.FontSize = 25;
box off
axis([0.5 2.5 -5 160])
ax.XAxis.Visible = 'off';
% ylabel('Number of Triggers')
ax.TickDir = 'out';
ax.TickLength = [0.02 0.02];
ax.LineWidth = 2;
f = gcf;
f.Position = [680   844   250   400];

% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

% STATS -  MEAN VALUES
mWT = nanmean(valsWT)
mHET =nanmean(valsHET)
[p, h] = ranksum(valsWT, valsHET)
% plot(1, mWT, 'k.', 'MarkerSize', 20)
% plot(2, mHET, 'r.', 'MarkerSize', 20)


% STATS
% [p,h] = ttest(valsWT, valsHET)



%% STRIPE/DOT PLOT -  Plot of LOOM Trial for each mouse. Dots for exits from shelter. - * - * - * - * - * - * - * - * - *
% Figure 2a, 3g, 3o

% Each row is the trial of an individual mouse.
% TOP = WT animals. 
% BOTTOM  = HET animals. 
% Uses 'exits' rather than 'exit_analysis'

% Set day and experiments. 
figure
day = 0;
exp = "00_Acclim"; 

n = height(exit_analysis);
all_animals = unique(exit_analysis.Animal);
n_animals = numel(all_animals);

allWT = find((exit_analysis.geno) == 1);
allHET = find((exit_analysis.geno) == 2);

all_animals_WT = unique(exit_analysis.Animal(allWT));
all_animals_HET = unique(exit_analysis.Animal(allHET));

nWT = numel(all_animals_WT);
nHET = numel(all_animals_HET);


for i = 1:2
    if i == 1 % WT  
        ax1 =  subplot(n_animals,1,1:nWT);
        y_val = 1;
%         rectangle('Position', [900 0 9100 18], 'FaceColor', [1 0.75 0.75, 0.3], 'EdgeColor', 'none')
        
        for j = 1:n_animals
            ani = all_animals(j);
            
            if ismember(ani, all_animals_WT)
                rectangle('Position', [0,y_val-0.25,15000,0.5], 'FaceColor', [0 0 0 0.1], 'EdgeColor', 'none')
                hold on
%                 allrows = find(exits.Animal == ani & exits.Day == day | exits.Animal == ani & exits.Day == 1 & exits.Exp == exp);  %
                allrows = find(exits.Animal == ani & exits.Exp == "01_Acclim" | exits.Animal == ani & exits.Exp == "00_Acclim");
                n_exits = numel(allrows);
                
                if n_exits >0
                    alltstamps = exits.FrameOut(allrows);
                    y_vals = ones(n_exits,1)*y_val;
                    hold on
                    
                    for k = 1:n_exits
                        if exits.LoomTrig(allrows(k))==1
                            mark = '.';
                            sz = 30;
                        elseif exits.LoomTrig(allrows(k))==0
                            mark = 'o';
                            sz = 9;
                        end
                        
                        plot(alltstamps(k), y_vals(k), mark, 'Color', 'k', 'MarkerSize', sz);
                    end
                    
                end
                y_val = y_val +1;
            end
            
        end
        
        box off
        ax1.XAxis.Visible = 'off';
        ax1.YAxis.Visible = 'off';
        ax1.YLim = ([0 nWT+1]);
        ax1.YTick = [1:1:nWT];
        ax1.LineWidth = 1.2;
        ax1.FontSize = 18; 
        ax1.TickDir = 'out';
        xlim([900 10000])
        
        
    elseif i ==2 % HET 
        ax2 =  subplot(n_animals,1,nWT+1:n_animals);
%         rectangle('Position', [900 0 9100 18], 'FaceColor', [1 0.75 0.75, 0.3], 'EdgeColor', 'none')
        y_val = 1;
        
        for j = 1:n_animals
            ani = all_animals(j);
            
            if ismember(ani, all_animals_HET)
                rectangle('Position', [0,y_val-0.25,15000,0.5], 'FaceColor', [1 0 0 0.3], 'EdgeColor', 'none') % CUl3 [1 0 1 0.1] % Ptchd1 [1 0.8 0.55 0.3]
                hold on
%                 allrows = find(exits.Animal == ani & exits.Day == day | exits.Animal == ani & exits.Day == 1 & exits.Exp == exp);
%                 allrows = find(exits.Animal == ani  & exits.Exp == exp ); % & exits.Exp == exp
                    allrows = find(exits.Animal == ani & exits.Exp == "01_Acclim" | exits.Animal == ani & exits.Exp == "00_Acclim");
                n_exits = numel(allrows);
                
                if n_exits >0
                    alltstamps = exits.FrameOut(allrows);
                    y_vals = ones(n_exits,1)*y_val;
                    hold on
                    
                    for k = 1:n_exits
                        if exits.LoomTrig(allrows(k))==1
                            mark = '.';
                            sz = 30;
                        elseif exits.LoomTrig(allrows(k))==0
                            mark = 'o';
                            sz = 9;
                        end
                        
                        plot(alltstamps(k), y_vals(k), mark, 'Color', [1 0 0], 'MarkerSize', sz);  % [1 0.6 0.25]
                    end
                    
                end
                y_val = y_val +1;
            end
        end
    box off
    ax2.YLim = ([0 nHET+1]);
    ax2.YTick =(1:1:nHET);
    ax2.XTick = (15:60:240)*60; % frames
    ax2.XTickLabels = ({'0', '1', '2', '3', '4'});
    xlabel('Time (minutes)')
    ax2.LineWidth = 1.2;
    ax2.FontSize = 18; 
    ax2.TickDir = 'out';
    ax2.YAxis.Visible = 'off';
    xlim([900 10000])
    end

end


f = gcf;
f.Position = [638   193   303   532]; %[680   605   677   493];



%% MEAN SEM - DOT and LINE - averaged across all trials - animal average - Number of Trials versus Day
% Figure 2b

% WT 
n_trialsWT = 6; 
dWT = zeros(1, n_trialsWT); %data
sWT = zeros(1, n_trialsWT); % SEM

for i = 0:5
    vals = find(exit_analysis.Day == i & (exit_analysis.geno) == 1);
    data = (exit_analysis.NumOut(vals)); 
    dWT(i+1) = nanmean(data);
    sWT(i+1) = nanstd(data)/sqrt(numel(vals));
end

% HET 
n_trialsHET = 6;
dHET = zeros(1, n_trialsHET); %data
sHET = zeros(1, n_trialsHET); % SEM

for i = 0:5
    vals = find(exit_analysis.Day == i & (exit_analysis.geno) == 2);
    data = (exit_analysis.NumOut(vals));
    dHET(i+1) = nanmean(data);
    sHET(i+1) = nanstd(data)/sqrt(numel(vals));
end

% PLOT 
figure
errorbar(1:1:n_trialsWT, dWT, sWT, 'o', 'CapSize', 0, 'Color', [0 0 0], 'MarkerFaceColor', [0.7 0.7 0.7],'MarkerEdgeColor', 'none',  'MarkerSize', 10, 'LineWidth', 1.75)
hold on 
errorbar(1:1:n_trialsHET, dHET, sHET, 'o', 'CapSize', 0, 'Color', [1 0 0], 'MarkerFaceColor', [1 0.8 0.8], 'MarkerEdgeColor','none', 'MarkerSize', 10, 'LineWidth', 1.75)
errorbar(1:1:n_trialsWT, dWT, sWT, 'o', 'CapSize', 0, 'Color', [0.4 0.4 0.4], 'Marker', 'none', 'LineWidth', 1.75)
errorbar(1:1:n_trialsHET, dHET, sHET, 'o', 'CapSize', 0, 'Color', [1 0.4 0.4],'Marker', 'none', 'LineWidth', 1.75)

% CREATE FIT LINES - LINEAR FIT - y = ax+b % % % % % % % % % %  % % % % % % % %  % % % % % % % %  % % % % % % % %  % % % % % % % %  % % % % % % % % 
% 
% [fitresult, gof] = createFits(dWT, dHET);
% legend off

axis([0.5 5.5 5 25])
box off
% yticks([1,2,3,4,5])
xticks([1,2,3,4,5])
xlabel('Day')
ylabel('Max Distance (cm)')
ax = gca;
ax.FontSize = 18; 
hold off
ax.TickDir = 'out'; 
ax.LineWidth = 1.2;
ax.TickLength = [0.025 0.025];
f =gcf;
f.Position = [2143 217 193 268];


[p,h] = ttest(dWT, dHET)


%% Max distance

% WT 
n_trialsWT = 6; 
dWT = zeros(1, n_trialsWT); %data
sWT = zeros(1, n_trialsWT); % SEM

for i = 0:5
    vals = find(exit_analysis.Day == i & (exit_analysis.geno) == 1);
    data = (exit_analysis.MaxD(vals)); 
    dWT(i+1) = nanmean(data);
    sWT(i+1) = nanstd(data)/sqrt(numel(vals));
end

% HET 
n_trialsHET = 6;
dHET = zeros(1, n_trialsHET); %data
sHET = zeros(1, n_trialsHET); % SEM

for i = 0:5
    vals = find(exit_analysis.Day == i & (exit_analysis.geno) == 2);
    data = (exit_analysis.MaxD(vals));
    dHET(i+1) = nanmean(data);
    sHET(i+1) = nanstd(data)/sqrt(numel(vals));
end



%% Exit duration 

% WT 
n_trialsWT = 6; 
dWT = zeros(1, n_trialsWT); %data
sWT = zeros(1, n_trialsWT); % SEM

for i = 0:5
    vals = find(exit_analysis.Day == i & (exit_analysis.geno) == 1);
    data = (exit_analysis.ExitDur(vals)); 
    dWT(i+1) = nanmean(data);
    sWT(i+1) = nanstd(data)/sqrt(numel(vals));
end

% HET 
n_trialsHET = 6;
dHET = zeros(1, n_trialsHET); %data
sHET = zeros(1, n_trialsHET); % SEM

for i = 0:5
    vals = find(exit_analysis.Day == i & (exit_analysis.geno) == 2);
    data = (exit_analysis.ExitDur(vals));
    dHET(i+1) = nanmean(data);
    sHET(i+1) = nanstd(data)/sqrt(numel(vals));
    
end


%% STATS 

exit_analysis_animals = zeros(n_animals, 10);

for j = 1:n_animals
    ani = all_animals(j);
    all_ani = find(exit_analysis.Animal == ani & exit_analysis.Day > 0);
    if isempty(all_ani)
        all_ani2 = find(exit_analysis.Animal == ani);
        geno = exit_analysis.geno(all_ani2(1));
    else 
        geno = exit_analysis.geno(all_ani(1));
    end 
    
    % Assign animal number to  first column of table. 
    exit_analysis_animals(j,1) = ani; 
    exit_analysis_animals(j,2) = geno; 
    cv = 3; 
    
    for k = [8,9,10, 11, 12, 13, 17, 18]
        all_vals = table2array(exit_analysis(all_ani, k));
%         if k == 8 || k ==9 || k == 18 || k ==17
%             exit_analysis_animals(j, cv) = sum(all_vals);
%         else
            exit_analysis_animals(j,cv) = nanmean(all_vals);
%         end
        cv = cv+1;
    end
    
end 

Animal = exit_analysis_animals(:,1);
Geno = exit_analysis_animals(:,2);
Exits = exit_analysis_animals(:,3);
ExitsThr = exit_analysis_animals(:,4);
MeanD = exit_analysis_animals(:,5);
MaxD = exit_analysis_animals(:,6);
IBI = exit_analysis_animals(:,7);
ExitDur = exit_analysis_animals(:,8);
Bouts = exit_analysis_animals(:,9);
Looms = exit_analysis_animals(:,10);

exits_animals1 = table(Animal, Geno, Exits, ExitsThr, MeanD, MaxD, IBI, ExitDur, Bouts, Looms);

% % % % % % % % % % % % % Tests: 

% A - Max distance travelled

% 1 - WT versus HET - Day 0 
allWT = find(exits_animals0.Geno == 1);
allHET = find(exits_animals0.Geno == 2);

WTVALS = exits_animals0.MaxD(allWT);
HETVALS = exits_animals0.MaxD(allHET);

nanmean(WTVALS)
nanmean(HETVALS)
[p,h] = ranksum(WTVALS, HETVALS)

% 2 - WT versus HET - Day 1

allWT = find(exits_animals1.Geno == 1);
allHET = find(exits_animals1.Geno == 2);

WTVALS = exits_animals1.MaxD(allWT);
HETVALS = exits_animals1.MaxD(allHET);

nanmean(WTVALS)
nanmean(HETVALS)
[p,h] = ranksum(WTVALS, HETVALS)

% 3 - WT versus HET - Day 5

allWT = find(exits_animals5.Geno == 1);
allHET = find(exits_animals5.Geno == 2);

WTVALS = exits_animals5.MaxD(allWT);
HETVALS = exits_animals5.MaxD(allHET);

nanmean(WTVALS)
nanmean(HETVALS)
[p,h] = ranksum(WTVALS, HETVALS)

% 4 - WT - Day 0 versus Day 1 

allWT0 = find(exits_animals0.Geno == 1);
allWT1 = find(exits_animals1.Geno == 1);

WT0VALS = exits_animals0.MaxD(allWT0);
WT1VALS = exits_animals1.MaxD(allWT1);

nanmean(WT0VALS)
nanmean(WT1VALS)
[p,h] = ranksum(WT0VALS, WT1VALS)

% 5 - HET - Day 0 versus Day 1 
allHET0 = find(exits_animals0.Geno == 2);
allHET1 = find(exits_animals1.Geno == 2);

HET0VALS = exits_animals0.MaxD(allHET0);
HET1VALS = exits_animals1.MaxD(allHET1);

nanmean(HET0VALS)
nanmean(HET1VALS)
[p,h] = ranksum(HET0VALS, HET1VALS)

% Look at trend in data across days - Day 1 to Day 5 - WT 
allD0 = find(exit_analysis.Day == 0);

exit_analysis2 = exit_analysis;
exit_analysis2(allD0, :) = []; 

% 
allWT = find(exit_analysis2.geno == 1);
X = fitlm(exit_analysis2.Day(allWT),  exit_analysis2.MaxD(allWT))

% Simple linear regression was used to test if the day studied significantly predicted the maximum distance travelled.
% The fitted regression model was: Maximum Distance for WT = 18.242 + -1.0793*(hours studied).
% The overall regression was statistically significant (R2 = 0.0605, F(2, 66) = 4.25, p < 0.0431).

% figure; plot(X)
% figure; plot(X2)

% Look at trend in data across days - Day 1 to Day 5 - WT 
allHET = find(exit_analysis2.geno ==2);
X2 = fitlm(exit_analysis2.Day(allHET),  exit_analysis2.MaxD(allHET))

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %

% B - Number of exits from the shelter.

% 1 - WT versus HET - Day 0 
allWT = find(exits_animals0.Geno == 1);
allHET = find(exits_animals0.Geno == 2);

WTVALS = exits_animals0.Exits(allWT);
HETVALS = exits_animals0.Exits(allHET);

nanmean(WTVALS)
nanmean(HETVALS)
[p,h] = ranksum(WTVALS, HETVALS)

% 2 - WT versus HET - Day 1
allWT = find(exits_animals1.Geno == 1);
allHET = find(exits_animals1.Geno == 2);

WTVALS = exits_animals1.Exits(allWT);
HETVALS = exits_animals1.Exits(allHET);

nanmean(WTVALS)
nanmean(HETVALS)
[p,h] = ranksum(WTVALS, HETVALS)

% 3 - WT versus HET - Day 5
allWT = find(exits_animals5.Geno == 1);
allHET = find(exits_animals5.Geno == 2);

WTVALS = exits_animals5.Exits(allWT);
HETVALS = exits_animals5.Exits(allHET);

nanmean(WTVALS)
nanmean(HETVALS)
[p,h] = ranksum(WTVALS, HETVALS)

% 4 - WT - Day 0 versus Day 1 
allWT0 = find(exits_animals0.Geno == 1);
allWT1 = find(exits_animals1.Geno == 1);

WT0VALS = exits_animals0.Exits(allWT0);
WT1VALS = exits_animals1.Exits(allWT1);

nanmean(WT0VALS)
nanmean(WT1VALS)
[p,h] = ranksum(WT0VALS, WT1VALS)

% 5 - HET - Day 0 versus Day 1 
allHET0 = find(exits_animals0.Geno == 2);
allHET1 = find(exits_animals1.Geno == 2);

HET0VALS = exits_animals0.Exits(allHET0);
HET1VALS = exits_animals1.Exits(allHET1);

nanmean(HET0VALS)
nanmean(HET1VALS)
[p,h] = ranksum(HET0VALS, HET1VALS)

% Look at trend in data across days - Day 1 to Day 5 - WT 
allWT = find(exit_analysis2.geno == 1);
X = fitlm(exit_analysis2.Day(allWT),  exit_analysis2.NumOut(allWT))

% Look at trend in data across days - Day 1 to Day 5 - WT 
allHET = find(exit_analysis2.geno == 2);
X2 = fitlm(exit_analysis2.Day(allHET),  exit_analysis2.NumOut(allHET))


% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %

% C - Duration of time spent outside of the shelter. 

% 1 - WT versus HET - Day 0 
allWT = find(exits_animals0.Geno == 1);
allHET = find(exits_animals0.Geno == 2);

WTVALS = exits_animals0.ExitDur(allWT);
HETVALS = exits_animals0.ExitDur(allHET);

nanmean(WTVALS)
nanmean(HETVALS)
[p,h] = ranksum(WTVALS, HETVALS)

% 2 - WT versus HET - Day 1
allWT = find(exits_animals1.Geno == 1);
allHET = find(exits_animals1.Geno == 2);

WTVALS = exits_animals1.ExitDur(allWT);
HETVALS = exits_animals1.ExitDur(allHET);

nanmean(WTVALS)
nanmean(HETVALS)
[p,h] = ranksum(WTVALS, HETVALS)

% 3 - WT versus HET - Day 5
allWT = find(exits_animals5.Geno == 1);
allHET = find(exits_animals5.Geno == 2);

WTVALS = exits_animals5.ExitDur(allWT);
HETVALS = exits_animals5.ExitDur(allHET);

nanmean(WTVALS)
nanmean(HETVALS)
[p,h] = ranksum(WTVALS, HETVALS)

% 4 - WT - Day 0 versus Day 1 
allWT0 = find(exits_animals0.Geno == 1);
allWT1 = find(exits_animals1.Geno == 1);

WT0VALS = exits_animals0.ExitDur(allWT0);
WT1VALS = exits_animals1.ExitDur(allWT1);

nanmean(WT0VALS)
nanmean(WT1VALS)
[p,h] = ranksum(WT0VALS, WT1VALS)

% 5 - HET - Day 0 versus Day 1 
allHET0 = find(exits_animals0.Geno == 2);
allHET1 = find(exits_animals1.Geno == 2);

HET0VALS = exits_animals0.ExitDur(allHET0);
HET1VALS = exits_animals1.ExitDur(allHET1);

nanmean(HET0VALS)
nanmean(HET1VALS)
[p,h] = ranksum(HET0VALS, HET1VALS)

% Look at trend in data across days - Day 1 to Day 5 - WT 
allWT = find(exit_analysis2.geno == 1);
X = fitlm(exit_analysis2.Day(allWT),  exit_analysis2.ExitDur(allWT))

% Look at trend in data across days - Day 1 to Day 5 - WT 
allHET = find(exit_analysis2.geno == 2);
X2 = fitlm(exit_analysis2.Day(allHET),  exit_analysis2.ExitDur(allHET))



save('220606_EXIT_ANALYSIS_STATS_Setd5.mat', 'exit_analysis', 'exit_analysis2', 'exits_animals0', 'exits_animals1', 'exits_animals2', 'exits_animals3', 'exits_animals4', 'exits_animals5');


%% CORRELATION STATISTICS - exploration across days - exit_analysis

% 1 - remove acclim 
allLOOM = find(string(exit_analysis.Exp) == "00_Acclim" | string(exit_analysis.Exp) == "01_Acclim" ); 
exit_analysis(allLOOM, :)= [];

% 
allWT = find((exit_analysis.geno) == 1);
allHET = find((exit_analysis.geno) == 2);

% WT
X = exit_analysis.Day(allWT);
Y = exit_analysis.MaxD(allWT);

% HET
X = exit_analysis.Day(allHET);
Y = exit_analysis.MaxD(allHET);

% STATS 
% [rho, p] = corr(X,Y, 'Type', 'Pearson')
n = numel(X)-sum(isnan(Y))
[R, P, RL, RU] = corrcoef(X, Y, 'rows', 'complete')
[rho, p] = corr(X,Y, 'Type', 'Spearman', 'rows', 'complete')














