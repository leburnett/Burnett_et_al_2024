
% Code for analysing the correlation betweek the average number of shelter exits
% and the average reaction time of each animal. 

% Generated by Burnett
% Used for Fig.2E-F, Fig. 3H,P.

%% How to generate 'exits_animals' from 'exit_analysis'

all_animals = unique(exit_analysis.Animal);
n_animals = numel(all_animals);

exit_analysis_animals = zeros(n_animals, 10);

for j = 1:n_animals
    ani = all_animals(j);
    all_ani = find(exit_analysis.Animal == ani);
    if numel(all_ani)>0
        
        geno = exit_analysis.geno(all_ani(1));
        
        % Assign animal number to  first column of table.
        exit_analysis_animals(j,1) = ani;
        exit_analysis_animals(j,2) = geno;
        cv = 3;
        
        for k = [8,9,10, 11, 12, 13, 17, 18]
            if k == 8 || k == 9 % TOTAL NOT AVERAGE EXITS - - - - NEW
                all_vals = table2array(exit_analysis(all_ani, k));
                exit_analysis_animals(j,cv) = sum(all_vals);
            else
                all_vals = table2array(exit_analysis(all_ani, k));
                exit_analysis_animals(j,cv) = nanmean(all_vals);
            end
            cv = cv+1;
        end
    else
        exit_analysis_animals(j,1) = ani;
        exit_analysis_animals(j,2) = geno;
        cv = 3;
    end
end

Animal = exit_analysis_animals(:,1);
Geno = exit_analysis_animals(:,2);
Exits = exit_analysis_animals(:,3);
ExitsThr = exit_analysis_animals(:,4);
MeanD = exit_analysis_animals(:,5);
MaxD = exit_analysis_animals(:,6);
IBI = exit_analysis_animals(:,7);
ExitDur = exit_analysis_animals(:,8);
Bouts = exit_analysis_animals(:,9);
Looms = exit_analysis_animals(:,10);

exits_animals = table(Animal, Geno, Exits, ExitsThr, MeanD, MaxD, IBI, ExitDur, Bouts, Looms);

%%

% Add LogDelta

% n = height(all_xy_analysis); 
% % details = ALL_XYLOOM_TABLE(:, [1,2,3,4,6,7]);
% rowsb4 = 175;  
% % fps = frames per second
% fps = 60; 
% % lf = loom frames - how many frames each loom lasts for
% lf = 46; 
% 
% 
% for i = 1:numel(all_xy_analysis(:,1))
%     
%     xx = []; 
%     
%     x = cell2mat(ALL_XYLOOM_TABLE{i,5}); 
%     ALL_XYLOOM_TABLE.Sp{i} = x;
%     
%     vel = diff(x);
%     ALL_XYLOOM_TABLE.Vel{i} = vel;
%     
%     sp_at = nanmean(x(rowsb4-5:rowsb4+5));
%     sp_immed = nanmean(x(rowsb4+18:rowsb4+48)); %nanmean
%     
%     all_xy_analysis.speedat{i} = sp_at;
%     all_xy_analysis.speed_immed{i} = sp_immed;
%     all_xy_analysis.DeltaImmed{i} = sp_immed/sp_at; 
%     all_xy_analysis.DeltaMax{i} = all_xy_analysis.MaxSpEscape{i}/sp_at;
%     
% end 


%% Add column with 'Animal' to 'animal_xy_table' - double not string. 
 
for i = 1:height(animal_xy_table)
    a = animal_xy_table.Animal{i};
    b = a(end-3:end);
    ani = str2num(b);
    animal_xy_table.Ani(i) = ani;
end 


%% CORRELATION - ANIMAL AVERAGE 
% Shelter exits should be X AXIS - dependent variable.

figure
for i = 1:height(exits_animals)
    ani = exits_animals.Animal(i);
    row = find((animal_xy_table.Ani) == ani); % row in xy_table
    if ~isempty(row)
        g = exits_animals.Geno(i);
        
        if g == 1
            col = 'k';
        else
            col = [1 0 1];
        end
        
        yval = animal_xy_table.T2M(row);
        xval = exits_animals.Exits(i);
        
        plot(xval, yval, 'o', 'Color', col, 'MarkerSize', 8, 'LineWidth', 1.2);
        hold on
    end
end


box off
ax = gca;
ax.TickDir = 'out';
ax.LineWidth = 1.5;
ax.TickLength = [0.02 0.02];
% xlabel('Max Speed')
% ylabel('Number of shelter exits')
f = gcf;
f.Position  = [ 276   121   454   201]; % WIDE

%[437   517   315   256]; 
% 

xlim([-1 160])
ylim([0 3])
% ylim([0 100])

% ylim([-3 125])

% ylim([-1.5 2.5])
% ylim([-5 125])
% 
% xlim([30 120])

%% DATA FOR CORRELATION

dataWTx = [];
dataWTy = [];
dataHETx = [];
dataHETy = [];

for i = 1:height(exits_animals)
    
    ani = exits_animals.Animal(i);
    row = find((animal_xy_table.Ani) == ani); % row in xy_table
    if ~isempty(row)
        g = exits_animals.Geno(i);
        
        if g == 1
            yval = animal_xy_table.T2M(row);
            xval = exits_animals.Exits(i);
            dataWTx = vertcat(dataWTx, xval);
            dataWTy = vertcat(dataWTy, yval);
        else
            yval = animal_xy_table.T2M(row);
            xval = exits_animals.Exits(i);
            dataHETx = vertcat(dataHETx, xval);
            dataHETy = vertcat(dataHETy, yval);
        end
        
    end
end

%% Corelation plot: 

[xData, yData] = prepareCurveData( dataWTx, dataWTy );

% Set up fittype and options.
ft = fittype( 'poly1' );
[fitresult{1}, gof(1)] = fit( xData, yData, ft );
h = plot( fitresult{1}, 'k');


[xData, yData] = prepareCurveData(dataHETx, dataHETy );
ft = fittype( 'poly1' );
[fitresult{2}, gof(2)] = fit(xData, yData, ft );
h = plot(fitresult{2}, 'm');

legend off
f.Renderer = 'painters'; 

% STATS 

[R, P, RL, RU] = corrcoef(dataWTx, dataWTy)
[R, P, RL, RU] = corrcoef(dataHETx, dataHETy)


[rho, p] = corr(dataWTx,dataWTy, 'Type', 'Pearson')
[rho, p] = corr(dataWTx,dataWTy, 'Type', 'Spearman')

[rho, p] = corr(dataHETx,dataHETy, 'Type', 'Pearson')
[rho, p] = corr(dataHETx,dataHETy, 'Type', 'Spearman')


%% Scatterhistogram - animal average

nh = numel(dataHETx);
nw = numel(dataWTx);

xvals = vertcat(dataWTx, dataHETx);
yvals = vertcat(dataWTy, dataHETy);

gp = vertcat(ones(nw, 1), ones(nh, 1)*2); 

close
figure
scatterhist(xvals, yvals, 'Group', gp, 'Kernel', 'overlay', 'Color', [0.4 0.4 0.4; 1 0.3 1], 'Style', 'bar', 'LineStyle', '-', 'Location', 'NorthEast', 'Direction', 'out', 'MarkerSize', 7)
% scatterhistogram(xy_return, 'LogDeltaImmed', 'MS', 'GroupVariable', 'G', 'HistogramDisplayStyle', 'smooth', 'LineStyle', '-', 'LineWidth', 1.5, 'MarkerStyle', 'o', 'LegendVisible', 'off', 'Color', [1 0.3 0.3; 0.4 0.4 0.4])
box off
hold on 
% plot([0 0], [0 120], 'k:', 'LineWidth', 1.5)
% ylabel('Reaction time (s)')
ylabel('Maximum Speed (cm s^-^1)')
xlabel('Shelter exits')
xlim([0 160])
% ylim([0 3])
ylim([0 90])
ax = gca;
ax.TickDir = 'out';
ax.TickLength = [0.02 0.02];
ax.LineWidth = 1.5;
ax.FontSize = 16;
legend

f = gcf;
f.Position = [535   300   660   651]; 


%Shelter exits
[p,h] = ranksum(xWT, xHET)
[p, h] = kstest2(xWT, xHET)

% Reaction time 
[p,h] = ranksum(yWT, yHET)
[p, h] = kstest2(yWT, yHET)













































%% CORRELATION - ALL TRIALS 
% Shelter exits should be X AXIS - dependent variable.

% Use exit_analysis instead of exits_animals 
% and all_xy_analysis instead of animal_xy_table.

%% Change 04_Loom to 03_Loom

for i = 1:259
    if string(xy_return.Exp(i)) == "04_Loom"
        xy_return(i,3) = {'03_Loom'};
    end 
end 


%% Average across 'exps' - i.e. 01_Loom, 02_Loom, 03_Loom per day


all_animals = unique(xy_return.Animal);

xWT = [];
yWT = [];

xHET = [];
yHET = []; 

figure
for k = 1:numel(all_animals)
    
    ani = all_animals{k};
    
    all_ani = find(string(xy_return.Animal) == ani);
    all_dates = unique(xy_return.Date(all_ani));
    
    for kk = 1:numel(all_dates)
        
        date = all_dates{kk};
        
        all_ani_day = find(string(xy_return.Animal) == ani & string(xy_return.Date)==date);
        
        all_exps = unique(xy_return.Exp(all_ani_day));
        
        for kkk = 1:numel(all_exps)
            exp = all_exps{kkk};
            
            all_ani_day_exp = find(string(xy_return.Animal) == ani & string(xy_return.Date)==date & string(xy_return.Exp)==exp);
            all_ani_day_exp_exits = find((exit_analysis.Animal) == str2num(ani(3:end)) & (exit_analysis.Date)==str2num(date) & string(exit_analysis.Exp)==exp);
            
            % YVAL 
            if numel(all_ani_day_exp)>1
                yval = nanmean((cell2mat(xy_return.MaxSpEscape(all_ani_day_exp))));
            else 
                yval = (xy_return.MaxSpEscape{all_ani_day_exp});
            end 
            
            % XVAL 
            if ~isempty(all_ani_day_exp_exits)
             xval = (exit_analysis.NumOut(all_ani_day_exp_exits));
            else 
                xval =0;
            end 

            
            % GENO
            g = xy_return.Geno{all_ani_day_exp(1)};
            if g =="wt"
                col = [0.6 0.6 0.6];
                m = 'o';
                xWT = [xWT, xval];
                yWT = [yWT, yval];
            else 
                m = 'o';
                col = [255/255 114/255 32/255];
%                 col = [1 0.6 1];
                xHET = [xHET, xval];
                yHET = [yHET, yval];
            end 
            
            if xval>0 && xval<20
            plot(xval, yval, 'Marker', m, 'Color', col, 'MarkerSize', 6);
            hold on 
            end 
        end 
    end 
   
end 

box off
ax= gca;
ax.TickDir = 'out';
ax.LineWidth = 1.2;
ax.TickLength = [0.02 0.02];
f = gcf;
f.Position  = [ 276   121   454   201]; % WIDE

xlim([-1 16])
xlim([0 12])
% ylim([0 8])
ylim([0 115])
ylim([0 4])

%%
% DATA FOR CORRELATION

[xData, yData] = prepareCurveData( xWT, yWT);

% Set up fittype and options.
ft = fittype( 'poly1' );
[fitresult{1}, gof(1)] = fit( xData, yData, ft );
h = plot( fitresult{1}, 'k');


[xData, yData] = prepareCurveData(xHET, yHET);

ft = fittype( 'poly1' );
[fitresult{2}, gof(2)] = fit(xData, yData, ft );
h = plot(fitresult{2}, 'r');

legend off
f.Renderer = 'painters'; 

% STATS 

[R, P, RL, RU] = corrcoef(xWT, yWT)
[R, P, RL, RU] = corrcoef(xHET, yHET)


[rho, p] = corr(xWT,yWT, 'Type', 'Pearson')
[rho, p] = corr(xWT,yWT, 'Type', 'Spearman')

[rho, p] = corr(xHET,yHET, 'Type', 'Pearson')
[rho, p] = corr(xHET,yHET, 'Type', 'Spearman')

%%


%% Get DATA : Average across 'exps' - i.e. 01_Loom, 02_Loom, 03_Loom per day

all_animals = unique(xy_return.Animal);

xWT = [];
yWT = [];

xHET = [];
yHET = []; 


for k = 1:numel(all_animals)
    
    ani = all_animals{k};
    
    all_ani = find(string(xy_return.Animal) == ani);
    all_dates = unique(xy_return.Date(all_ani));
    
    for kk = 1:numel(all_dates)
        
        date = all_dates{kk};
        
        all_ani_day = find(string(xy_return.Animal) == ani & string(xy_return.Date)==date);
        
        all_exps = unique(xy_return.Exp(all_ani_day));
        
        for kkk = 1:numel(all_exps)
            exp = all_exps{kkk};
            
            all_ani_day_exp = find(string(xy_return.Animal) == ani & string(xy_return.Date)==date & string(xy_return.Exp)==exp);
            all_ani_day_exp_exits = find((exit_analysis.Animal) == str2num(ani(3:end)) & (exit_analysis.Date)==str2num(date) & string(exit_analysis.Exp)==exp);
            
            % YVAL 
            if numel(all_ani_day_exp)>1
                yval = nanmean((cell2mat(xy_return.TimeToMaxSp(all_ani_day_exp))));
            else 
                yval = (xy_return.TimeToMaxSp{all_ani_day_exp});
            end 
            
            % XVAL 
            if ~isempty(all_ani_day_exp_exits)
             xval = (exit_analysis.NumOut(all_ani_day_exp_exits));
            else 
                xval =0;
            end 

            % GENO
            g = xy_return.Geno{all_ani_day_exp(1)};
            if g =="wt"
                col = [0.6 0.6 0.6];
                m = 'o';
                xWT = [xWT, xval];
                yWT = [yWT, yval];
            else 
                m = 'o';
                col = [255/255 114/255 32/255];
%                 col = [1 0.6 1];
                xHET = [xHET, xval];
                yHET = [yHET, yval];
            end 

        end 
    end 
   
end 


%% %% Scatterhistogram - all experiments 

nh = numel(xHET);
nw = numel(xWT);

xvals = vertcat(xWT', xHET');
yvals = vertcat(yWT', yHET');

gp = vertcat(ones(nw, 1), ones(nh, 1)*2); 

close
figure
scatterhist(xvals, yvals, 'Group', gp, 'Kernel', 'overlay', 'Color', [0.4 0.4 0.4; 1 0.3 1], 'Style', 'bar', 'LineStyle', '-', 'Location', 'NorthEast', 'Direction', 'out', 'MarkerSize', 7)
% scatterhistogram(xy_return, 'LogDeltaImmed', 'MS', 'GroupVariable', 'G', 'HistogramDisplayStyle', 'smooth', 'LineStyle', '-', 'LineWidth', 1.5, 'MarkerStyle', 'o', 'LegendVisible', 'off', 'Color', [1 0.3 0.3; 0.4 0.4 0.4])
box off
hold on 
% plot([0 0], [0 120], 'k:', 'LineWidth', 1.5)
ylabel('Reaction time (s)')
xlabel('Shelter exits')
xlim([0 12])
ylim([0 4])
ax = gca;
ax.TickDir = 'out';
ax.LineWidth = 1.5;
ax.FontSize = 16;
legend

f = gcf;
f.Position = [535   300   660   651]; 


%Shelter exits
[p,h] = ranksum(xWT, xHET)
[p, h] = kstest2(xWT, xHET)

% Reaction time 
[p,h] = ranksum(yWT, yHET)
[p, h] = kstest2(yWT, yHET)

%%













































































































%% Average across 'exps' - i.e. 01_Loom, 02_Loom, 03_Loom per day

all_animals = unique(all_xy_analysis.Animal);

xWT = [];
yWT = [];

xHET = [];
yHET = []; 

figure
for k = 1:numel(all_animals)
    ani = all_animals{k};
    
    all_ani = find(string(all_xy_analysis.Animal) == ani);
    all_dates = unique(all_xy_analysis.Date(all_ani));
    
    for kk = 1:numel(all_dates)
        date = all_dates{kk};
        all_ani_day = find(string(all_xy_analysis.Animal) == ani & string(all_xy_analysis.Date)==date);
        
        all_exps = unique(all_xy_analysis.Exp(all_ani_day));
        
        for kkk = 1:numel(all_exps)
            exp = all_exps{kkk};
            
            all_ani_day_exp = find(string(all_xy_analysis.Animal) == ani & string(all_xy_analysis.Date)==date & string(all_xy_analysis.Exp)==exp);
            all_ani_day_exp_exits = find((exit_analysis.Animal) == str2num(ani(3:end)) & (exit_analysis.Date)==str2num(date) & string(exit_analysis.Exp)==exp);
            
            % YVAL 
            if numel(all_ani_day_exp)>1
                yval = nanmean((cell2mat(all_xy_analysis.TimeToMaxSp(all_ani_day_exp))));
            else 
                yval = (all_xy_analysis.TimeToMaxSp{all_ani_day_exp});
            end 
            
            % XVAL 
            if numel(all_ani_day_exp_exits)>1
%                   xval = nanmean(exit_analysis.InterBoutInterval(all_ani_day_exp_exits));
                xval = sum(exit_analysis.NumOut(all_ani_day_exp_exits));
            else 
%                 xval = (exit_analysis.InterBoutInterval(all_ani_day_exp_exits));
                xval = (exit_analysis.NumOut(all_ani_day_exp_exits));
            end 
            
            % GENO
            g = exit_analysis.geno(all_ani_day_exp_exits(1));
            if g ==1 
                col = [0.6 0.6 0.6];
                m = 'o';
                xWT = [xWT, xval];
                yWT = [yWT, yval];
            else 
                m = 'o';
                col = [1 0.6 0.6];
                xHET = [xHET, xval];
                yHET = [yHET, yval];
            end 
            
            if xval>0 && xval<15
            plot(xval, yval, 'Marker', m, 'Color', col, 'MarkerSize', 6);
            hold on 
            end 
        end 
    end 
   
end 

box off
ax= gca;
ax.TickDir = 'out';
ax.LineWidth = 1.2;

%% Add ANIMAL AVERAEG ON TOP 

all_animals = unique(all_xy_analysis.Animal);

for k = 1:numel(all_animals)
    ani = all_animals{k};
    
    all_ani = find(string(all_xy_analysis.Animal) == ani);
    all_dates = unique(all_xy_analysis.Date(all_ani));
   
    % ADD ANIMAL AVERAGE ON TOP 
   
    all_ani_exits = find(exit_analysis.Animal== str2num(ani(3:end)));
    g = exit_analysis.geno(all_ani_exits(1));

    all_ani_x = nanmean(exit_analysis.NumOut(all_ani_exits));
    all_ani_y = nanmean((cell2mat(all_xy_analysis.TimeToMaxSp(all_ani))));
    
    if g ==1 
        coll = 'k';
    else 
        coll = 'r';
    end 
    plot(all_ani_x, all_ani_y, 'Marker', '.', 'Color', coll, 'MarkerSize', 35);
    hold on 
    
end 

ax.TickLength = [0.02 0.02];
ylim([0 9])
xlim([0 13])

%%

[xData, yData] = prepareCurveData(xWT, yWT);
ft = fittype( 'poly1' );
[fitresult{1}, gof(1)] = fit( xData, yData, ft );
h = plot( fitresult{1}, 'k');

[xData, yData] = prepareCurveData( xHET, yHET);
ft = fittype( 'poly1' );
[fitresult{2}, gof(2)] = fit( xData, yData, ft );
h = plot( fitresult{2}, 'r');

legend off


%%


% [C, ia] = unique(all_xy_analysis(:,[1,2,3]));

v = find(xWT>15 | xWT<1);
% v = find(xWT(isnan(xWT)));
% v = find(yWT(isnan(yWT)));
xWT(v) = [];
yWT(v) =[];

v = find(xHET>15 | xHET<1);
xHET(v) = [];
yHET(v) = [];

[R, P, RL, RU] = corrcoef(xWT, yWT)
[R, P, RL, RU] = corrcoef(xHET, yHET)

[rho, p] = corr(xHET',yHET', 'Type', 'Pearson')
[rho, p] = corr(xHET',yHET', 'Type', 'Spearman')


[rho, p] = corr(xWT',yWT', 'Type', 'Pearson')
[rho, p] = corr(xWT',yWT', 'Type', 'Spearman')



%% BANANA

all_animals_XY = unique(ALL_XYLOOM_TABLE.Animal);

all_animals = unique(exit_analysis.Animal);


notrig = find(exits.LoomTrig==0);
exits2 = exits;
exits2(notrig, :) = [];

noIBI = find(exits2.IBI==0);
exits2(notrig, :) = [];

% ADD TRIALS NUMBER - ALL_XYLOOM 

%   all_animals = unique(ALL_XYLOOM_TABLE2.Animal); 
%   n_animals = numel(all_animals); 
% 
% for i = 1:n_animals
%     ani = all_animals(i); 
%     trial_number = 1; 
%     
%     for j = 1:n
%         if string(ALL_XYLOOM_TABLE2.Animal{j}) == ani 
%             ALL_XYLOOM_TABLE2.Trial(j) = trial_number; 
%             trial_number = trial_number +1; 
%         end   
%     end
% end 


%% ADD TRIAL NUMBER - EXIT_ANALYSIS

  all_animals = unique(exits2.Animal); 
  n_animals = numel(all_animals); 

for i = 1:n_animals
    ani = all_animals(i); 
    trial_number = 1; 
    
    for j = 1:height(exits2)
        if exits2.Animal(j) == ani 
            exits2.Trial(j) = trial_number; 
            trial_number = trial_number +1; 
        end   
    end
end 

%%

all_04 = find(ALL_XYLOOM_TABLE.Exp == "04_MultiLoom");
ALL_XYLOOM_TABLE2 = ALL_XYLOOM_TABLE;
ALL_XYLOOM_TABLE2(all_04, :) = [];

details = ALL_XYLOOM_TABLE2(:, [1,2,3,4,6,7,8,9, 10]);

%% Add new column in ALL_XYLOOM_2 - ani for number value of animal

for i = 1:height(ALL_XYLOOM_TABLE2)
    a = ALL_XYLOOM_TABLE2.Animal{i};
    b = a(end-3:end);
    ani = str2num(b);
    ALL_XYLOOM_TABLE2.Ani{i} = ani;
end 



%%

xHET = [];
yHET = []; 

  all_animals = unique(exits2.Animal); 
  n_animals = numel(all_animals); 

  figure
  for k = 1:n_animals
      ani = all_animals(k);
      all_ani = find(exits2.Animal==ani);
      n_trials = numel(all_ani);
      
      for ii = 1:n_trials
          
          val = find(exits2.Animal == ani & exits2.Trial == ii);
          val_XY = find(cell2mat(ALL_XYLOOM_TABLE2.Ani) == ani & ALL_XYLOOM_TABLE2.Trial == ii);
          
          if numel(val_XY)>0
              
              xval = exits2.IBI(val);
              yval = (ALL_XYLOOM_TABLE2.T2M{val_XY}-180)/60;
              
              if exits2.Geno(val)==1
                  col = 'ko';
                  sz = 10;
              else
                  if ii ==1
                      col = 'r.';
                      sz = 20;
                  else
                      col = 'ro';
                      sz = 10;
                  end
                  
                  xHET = [xHET, xval];
                  yHET = [yHET, yval];
                  
              end
              plot(xval, yval, col, 'MarkerSize', sz);
              hold on
          end
      end
  end
  
  box off
xlim([-5 95])
ylim([-0.1 9])
xlabel('Exit interval (s)')
ylabel('Reaction time(s)')








