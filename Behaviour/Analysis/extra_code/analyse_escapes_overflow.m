% Extra plotting code for looming escape response analysis
% Generated by Burnett
% overflow from 'analyse_escapes.m' - not used for generating figures in
% the paper





%% EXTRA - OLD

% %% P10 - Response Types Bar Chart -  BAR CHART - L2M / NO RESPONSE. - ALL 6 GROUPS - ALL TRIALS though - NOT ANIMAL AVERAGES - weird. 

% % Function:
% make_ResponseTypeBar(animal_xy_table);
%  
% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % 
% 
% bvals = zeros(6,2);
% 
% for i = 1:6
%     vv = find(string(all_xy_analysis.Geno) == "wt" & cell2mat(all_xy_analysis.Looms2Max) == i);
%     bvals(i,1) = numel(vv)/numel(allWT);
%     vw = find(string(all_xy_analysis.Geno) == "het" & cell2mat(all_xy_analysis.Looms2Max) == i);
%     bvals(i,2) = numel(vw)/numel(allHET);
% end
% 
% figure
% b = bar(bvals', 'Stacked', 'LineWidth', 0.5);
% cvals = linspace(0.75, 0.25, 4)';
% cvals = repmat(cvals,1, 3);
% b(1).FaceColor = [1 1 1];
% b(2).FaceColor = (cvals(1,:));
% b(3).FaceColor = (cvals(2,:));
% b(4).FaceColor = (cvals(3,:));
% b(5).FaceColor = (cvals(4,:));
% b(6).FaceColor = [0 0 0];
% axis([0 3 0 1.6])
% yticks([0 0.2 0.4 0.6 0.8 1])
% xticks('')
% ax = gca;
% ax.TickDir = 'out';
% ax.LineWidth = 1.8;
% box off
% ax.FontSize = 25;
% ax.XAxis.Visible = 'off';
% ylabel('Proportion of Trials')
% legend('L1', 'L2', 'L3', 'L4', 'L5', 'No Response')
% legend('FontSize', 15);
% legend('boxoff');
% 
% 
% % BAR CHART - From Animal Averages above - includes all trials including
% % trials wehre animals do not return to shelter - want to include
% % proprotion where the animals don't respond. 
% 
% bvals = zeros(6,2);
% allWT = find(l2m_array(:,8) == 1);
% allHET = find(l2m_array(:,8) == 2);
% 
% for i = 1:6
%     bvals(i,1) = mean(l2m_array(allWT, i+1));
%     bvals(i,2) =  mean(l2m_array(allHET, i+1));
% end
% 
% figure
% b = bar(bvals', 'Stacked', 'LineWidth', 1);
% cvals = linspace(0.75, 0.25, 4)';
% cvals = repmat(cvals,1, 3);
% b(1).FaceColor = [1 1 1];
% b(2).FaceColor = (cvals(1,:));
% b(3).FaceColor = (cvals(2,:));
% b(4).FaceColor = (cvals(3,:));
% b(5).FaceColor = (cvals(4,:));
% b(6).FaceColor = [0 0 0];
% axis([0 3 0 1.1])
% yticks([0 0.2 0.4 0.6 0.8 1])
% xticks('')
% ax = gca;
% ax.TickDir = 'out';
% ax.LineWidth = 1.8;
% box off
% ax.FontSize = 25;
% ax.XAxis.Visible = 'off';
% ylabel('Proportion of Trials')
% legend('L1', 'L2', 'L3', 'L4', 'L5', 'No Response')
% legend('FontSize', 15);
% legend('boxoff');
% 
% 
% 




%% HEATMAP - Only First Trial

xxx = find(ALL_XYLOOM.Trial == 1);
 vv = ALL_XYLOOM(xxx, :);


lw = 1.5;

speed_WT = [];
speed_HET = []; 

for i = 1:height(vv)
    if string(vv.Geno{i}) == "wt"  
        G = cell2mat(vv{i,5});
        speed_WT = vertcat(speed_WT, G); 
    elseif string(vv.Geno{i}) == "het"  
        F = cell2mat(vv{i,5});
        speed_HET = vertcat(speed_HET, F);
    end
end

% Make plot with 2 subplots - top = WT, bottom = HET. 
subplot(2,1,1)
imagesc(speed_WT)
hold on 
plot([rowsb4 rowsb4], [0 80], 'w:', 'LineWidth', lw)
plot([rowsb4+lf rowsb4+lf], [0 80], 'w:', 'LineWidth', lw)
plot([rowsb4+lf*2 rowsb4+lf*2], [0 80], 'w:', 'LineWidth', lw)
plot([rowsb4+lf*3 rowsb4+lf*3], [0 80], 'w:', 'LineWidth', lw)
plot([rowsb4+lf*4 rowsb4+lf*4], [0 80], 'w:', 'LineWidth', lw)
plot([rowsb4+lf*5 rowsb4+lf*5], [0 80], 'w:', 'LineWidth', lw)
axis off
box off
colormap(redblue)
caxis([0 80])

subplot(2,1,2)
imagesc(speed_HET)
hold on 
plot([rowsb4 rowsb4], [0 115], 'w:', 'LineWidth', lw)
plot([rowsb4+lf rowsb4+lf], [0 115], 'w:', 'LineWidth', lw)
plot([rowsb4+lf*2 rowsb4+lf*2], [0 115], 'w:', 'LineWidth', lw)
plot([rowsb4+lf*3 rowsb4+lf*3], [0 115], 'w:', 'LineWidth', lw)
plot([rowsb4+lf*4 rowsb4+lf*4], [0 115], 'w:', 'LineWidth', lw)
plot([rowsb4+lf*5 rowsb4+lf*5], [0 115], 'w:', 'LineWidth', lw)
axis off
box off
colormap(redblue)
caxis([0 80])



%% HEATMAP - Only the LAST TRIAL of each mouse. 

xxx = []; 

    for j = 1:n_animals
    ani = all_animals(j);
    all_ani = find(string(ALL_XYLOOM_TABLE.Animal) == ani);
    max_trial_ani = find((string(ALL_XYLOOM_TABLE.Animal) == ani & ALL_XYLOOM_TABLE.Trial == max(ALL_XYLOOM_TABLE.Trial(all_ani))));
    xxx= [xxx, max_trial_ani];
    end 

 vv = ALL_XYLOOM_TABLE(xxx, :);


lw = 1.5;

speed_WT = [];
speed_HET = []; 

for i = 1:height(vv)
    if string(vv.Geno{i}) == "wt"  
        G = cell2mat(vv{i,5});
        speed_WT = vertcat(speed_WT, G); 
    elseif string(vv.Geno{i}) == "het"  
        F = cell2mat(vv{i,5});
        speed_HET = vertcat(speed_HET, F);
    end
end

% Make plot with 2 subplots - top = WT, bottom = HET. 
subplot(2,1,1)
imagesc(speed_WT)
hold on 
plot([rowsb4 rowsb4], [0 80], 'w:', 'LineWidth', lw)
plot([rowsb4+lf rowsb4+lf], [0 80], 'w:', 'LineWidth', lw)
plot([rowsb4+lf*2 rowsb4+lf*2], [0 80], 'w:', 'LineWidth', lw)
plot([rowsb4+lf*3 rowsb4+lf*3], [0 80], 'w:', 'LineWidth', lw)
plot([rowsb4+lf*4 rowsb4+lf*4], [0 80], 'w:', 'LineWidth', lw)
plot([rowsb4+lf*5 rowsb4+lf*5], [0 80], 'w:', 'LineWidth', lw)
axis off
box off
colormap(redblue)
caxis([0 80])

subplot(2,1,2)
imagesc(speed_HET)
hold on 
plot([rowsb4 rowsb4], [0 115], 'w:', 'LineWidth', lw)
plot([rowsb4+lf rowsb4+lf], [0 115], 'w:', 'LineWidth', lw)
plot([rowsb4+lf*2 rowsb4+lf*2], [0 115], 'w:', 'LineWidth', lw)
plot([rowsb4+lf*3 rowsb4+lf*3], [0 115], 'w:', 'LineWidth', lw)
plot([rowsb4+lf*4 rowsb4+lf*4], [0 115], 'w:', 'LineWidth', lw)
plot([rowsb4+lf*5 rowsb4+lf*5], [0 115], 'w:', 'LineWidth', lw)
axis off
box off
colormap(redblue)
caxis([0 80])





%% Adding columns to all_xy_analysis



  all_animals = unique(all_xy_analysis.Animal); 
  n_animals = numel(all_animals); 

for i = 1:n_animals
    ani = all_animals(i); 
    trial_number = 1; 
    
    for j = 1:n
        if string(all_xy_analysis.Animal{j}) == ani 
            all_xy_analysis.Trial(j) = trial_number; 
            trial_number = trial_number +1; 
        end   
    end
end 

% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

% 2 - Day 

 all_dates = unique(all_xy_analysis.Date); 

for i = 1:n
    if string(all_xy_analysis.Date(i)) == all_dates{1} 
       all_xy_analysis.Day(i) = 1;
    elseif string(all_xy_analysis.Date(i)) == all_dates{2} 
        all_xy_analysis.Day(i) = 2;
    elseif string(all_xy_analysis.Date(i)) == all_dates{3} 
        all_xy_analysis.Day(i) = 3;
    elseif string(all_xy_analysis.Date(i)) == all_dates{4} 
        all_xy_analysis.Day(i) = 4;
    elseif string(all_xy_analysis.Date(i)) == all_dates{5} 
        all_xy_analysis.Day(i) = 5;
    end 
end 

% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

% 3- Trial per day

for i = 1:n_animals
    ani = all_animals(i); 
    
    for k = 1:5 % Run through days
        day = k;
        trial_number = 1; 
            
        for j = 1:n
            if all_xy_analysis.Day(j)== day && string(all_xy_analysis.Animal{j}) == ani
                    all_xy_analysis.TrialPerDay(j) = trial_number;
                    trial_number = trial_number +1;
            end
        end
        
    end
end 

% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

% 4 - Number of Looms to Escape - to all_xy_analysis

%170 - not 180  - 10 frames = +0.1667.

for i = 1:n
    t2max = all_xy_analysis.TimeToMaxSp{i} +0.1667; %+0.1667
    if t2max <= lf/60
        all_xy_analysis.Looms2Max{i} = 1; 
    elseif t2max <= (lf*2)/60
        all_xy_analysis.Looms2Max{i} = 2;
    elseif t2max <= (lf*3)/60
        all_xy_analysis.Looms2Max{i} = 3;
    elseif t2max <= (lf*4)/60
        all_xy_analysis.Looms2Max{i} = 4;
    elseif t2max <= (lf*5)/60
        all_xy_analysis.Looms2Max{i} = 5;
    elseif t2max >(lf*5)/60 && all_xy_analysis.MaxSpEscape{i}>20
        all_xy_analysis.Looms2Max{i} = 6;
    elseif t2max >(lf*5)/60 && all_xy_analysis.MaxSpEscape{i}<20 % NO RESPONSE 
        all_xy_analysis.Looms2Max{i} = 7;
    end 
end 



%% If T2M in seconds not frames. 

% for i = 116:163
% %     if string(ALL_XYLOOM_TABLE.Date{i}) == '210301' | string(ALL_XYLOOM_TABLE.Date{i}) == '210302' | string(ALL_XYLOOM_TABLE.Date{i}) == '210303' | string(ALL_XYLOOM_TABLE.Date{i}) == '210304' | string(ALL_XYLOOM_TABLE.Date{i}) == '210305'
%         T2M = ALL_XYLOOM_TABLE.T2M{i};
%         T2M2 = T2M*60 + 180; 
%         ALL_XYLOOM_TABLE.T2M{i} = T2M2; 
% %     end 
% end 















%%   RETURN TO SHELTER / ESCAPE PROBABILITY!!!

%% Boxplot + DOTS - log(delat_immed) - animal averages. 

nWT = numel(all_animals_WT);
nHET = numel(all_animals_HET);

WTVALS = zeros(nWT,1);
HETVALS = zeros(nHET, 1);

% WT
for i = 1:nWT
    ani = all_animals_WT{i};
    all_ani = find(string(all_xy_analysis.Animal) == ani & all_xy_analysis.Trial==1); %cell2mat(all_xy_analysis.speedat) >2); %& all_xy_analysis.Trial<5
%     x1 = log(nanmean(cell2mat(all_xy_analysis.DeltaImmed(all_ani))));
    x1 = (nanmean(cell2mat(all_xy_analysis.TimeToMaxSp(all_ani))));
    WTVALS(i) = x1;
end 

% HET
for i = 1:nHET
    ani = all_animals_HET{i};
    all_ani = find(string(all_xy_analysis.Animal) == ani & all_xy_analysis.Trial==1); %cell2mat(all_xy_analysis.speedat) >2); %& all_xy_analysis.Trial<=10
%     x1 = log(nanmean(cell2mat(all_xy_analysis.DeltaImmed(all_ani))));
    x1 = (nanmean(cell2mat(all_xy_analysis.TimeToMaxSp(all_ani))));
    HETVALS(i) = x1;
end 

x1 = ones(nWT,1);
x2 = ones(nHET,1)*2;

VALS = vertcat(WTVALS, HETVALS);
GRP = vertcat(x1,x2);

% Figure
figure
scatter(x1, WTVALS,'SizeData', 150, 'MarkerEdgeColor', [0.2 0.2 0.2], 'jitter', 'on', 'jitterAmount', 0.05)
hold on
scatter(x2, HETVALS', 'SizeData', 150,'MarkerEdgeColor', [1 0.2 0.2] , 'jitter', 'on', 'jitterAmount', 0.05) % [1 0.2 1] % [1 0.7 0.5]
b = boxplot(VALS, GRP, 'Colors', 'k');
set(b, 'LineWidth', 1.5)

xticks([1,2])
xticklabels({''})
ax = gca;
ax.FontSize = 25;
box off
xlim([0.5 2.5])
ylim([-1 2])
% axis([0.5 2.5 -2.5 2.5])
% ax.XAxis.Visible = 'off';
% ylabel('Number of Exits')
ax.TickDir = 'out';
ax.TickLength = [0.02 0.02];
ax.LineWidth = 1.5;
f = gcf;
f.Position = [680   844   250   400];


nanmean(WTVALS)
nanmean(HETVALS)
[p, h] = ranksum(WTVALS, HETVALS)
[p, h] = ttest2(WTVALS, HETVALS)


%% Boxplot + DOTS - RETURN TO SHELTER/ ESCAPE PROBABILITY- POOLED TRIALS 

nWT = numel(find(string(all_xy_analysis.Geno) == "wt" & cell2mat(all_xy_analysis.speedat) >2  & cell2mat(all_xy_analysis.ReturnToShelter)==1));
nHET = numel(find(string(all_xy_analysis.Geno) == "het" & cell2mat(all_xy_analysis.speedat) >2  & cell2mat(all_xy_analysis.ReturnToShelter)==1));

WTVALS = [];
HETVALS = [];

% WT
for i = 1:n 
    if string(all_xy_analysis.Geno(i)) == "wt" & cell2mat(all_xy_analysis.speedat(i)) >2 & cell2mat(all_xy_analysis.ReturnToShelter(i))==1
        x1 = cell2mat(all_xy_analysis.TimeToMaxSp(i));
        WTVALS = [WTVALS, x1];
    elseif string(all_xy_analysis.Geno(i)) == "het" & cell2mat(all_xy_analysis.speedat(i)) >2  & cell2mat(all_xy_analysis.ReturnToShelter(i))==1
        x1 = cell2mat(all_xy_analysis.TimeToMaxSp(i));
        HETVALS = [HETVALS, x1];
    end 
end 

x1 = ones(nWT,1);
x2 = ones(nHET,1)*2;

VALS = vertcat(WTVALS', HETVALS');
GRP = vertcat(x1,x2);

% Figure
figure
scatter(x1, WTVALS,'SizeData', 150, 'MarkerEdgeColor', [0.2 0.2 0.2], 'jitter', 'on', 'jitterAmount', 0.05)
hold on
scatter(x2, HETVALS', 'SizeData', 150,'MarkerEdgeColor', [1 0.2 0.2] , 'jitter', 'on', 'jitterAmount', 0.05) % [1 0.2 1] % [1 0.7 0.5]
b = boxplot(VALS, GRP, 'Colors', 'k');
set(b, 'LineWidth', 1.5)

xticks([1,2])
xticklabels({''})
ax = gca;
ax.FontSize = 25;
box off
xlim([0.5 2.5])
ylim([0 1.05])
% axis([0.5 2.5 -2.5 2.5])
% ax.XAxis.Visible = 'off';
% ylabel('Number of Exits')
ax.TickDir = 'out';
ax.TickLength = [0.02 0.02];
ax.LineWidth = 1.5;
f = gcf;
f.Position = [680   844   250   400];


nanmean(WTVALS)
nanmean(HETVALS)
[p, h] = ranksum(WTVALS, HETVALS)



%%

% % % % % % % % % % % % % % % % % % % % % % % %% % % % % % % % % % % %

%% ONLY TRIALS WHERE L2M ==1 

%% 1 - MEan SEM ONLY for trials where L2M == 1
% MAke MEAN/SEM plot only for the trials where the mice respond within the
% first loom. 

cLims = [0 80]; %colormap limits 
sz = 18; %font size.
labels = 1;

l2m1 = find(cell2mat(xy_return.Looms2Max) == 1);
num_l2m1 = numel(l2m1);

xy_aligned = zeros(num_l2m1, 221); 
aligned_genos = zeros(num_l2m1, 1);

for i = 1:height(xy_return)
    data = cell2mat(ALL_XYLOOM{i, 5});
    genoooo = string(xy_return.Geno(i));
    
    if xy_return.Looms2Max{i} == 1
        start_row = 180;
        data2 = data(start_row-20:start_row+200);
        xy_aligned(i, :) = data2;
        
        if genoooo == "wt"
            aligned_genos(i) = 1;
        elseif genoooo == "het"
            aligned_genos(i) = 2;
        end
        
    end
    
end

allWT = find(aligned_genos == 1);
allHET = find(aligned_genos == 2);

plot_MeanSEM_AlignedLastLoom(xy_aligned, allWT, allHET, col, labels)
ax = gca;
ax.TickDir = 'out';
ax.TickLength = [0.02 0.02];
ax.LineWidth = 1.5;
f = gcf;
f.Position = [ 331   490   292   289];

%% 
xy_return_only1 = xy_return(l2m1, :);

all_animals = string(unique(xy_return_only1.Animal));

val = 12; % Which column to assess in all_xy_analysis : T2M

speed_WT = [];
speed_HET = []; 

for j = 1:numel(all_animals)
    ani = all_animals(j);
    speed_ani = [];
    
    for i = 1:height(xy_return_only1)
        if  string(xy_return_only1.Animal{i}) == ani 
            G = cell2mat(xy_return_only1{i, val});
            speed_ani = vertcat(speed_ani, G);
            genoo = string(xy_return_only1.Geno{i});
        end
    end
    
    if genoo == "wt"
        speed_WT = vertcat(speed_WT, nanmean(speed_ani));
    else
        speed_HET = vertcat(speed_HET, nanmean(speed_ani));
    end
    
end

 %%%%% Combine arrays %%%% 
speed_ALL = horzcat(speed_WT', speed_HET');

% PLOT 
figure
n_wt = numel(speed_WT(:,1));
n_het = numel(speed_HET(:,1));

x1 = ones(1, n_wt);
x2 = ones(1, n_het)*2;

gp = horzcat(x1, x2);

scatter(x1, speed_WT,'SizeData', 200, 'MarkerEdgeColor', [0.6 0.6 0.6], 'jitter', 'on', 'jitterAmount', 0.1, 'LineWidth', 1.2)
hold on 
scatter(x2, speed_HET, 'SizeData', 200,'MarkerEdgeColor', col, 'jitter', 'on', 'jitterAmount', 0.1, 'LineWidth', 1.2)
% b = boxplot(speed_ALL, 'Colors', 'k');
b = boxplot(speed_ALL, gp, 'Colors', 'k');
set(b, 'linew', 1.25);

xticks([1,2])
xticklabels({''})
ax = gca;
ax.FontSize = 25;
box off
axis([0.5 2.5 0 80])
% ax.XAxis.Visible = 'off'; 
hold off
ax.TickDir = 'out'; 
ax.TickLength = [0.02 0.02];
% ylabel('Reaction Time (s)')
% ylabel('Max. Speed (cm s^-1)')
ax.LineWidth = 2;

f = gcf;
f.Position = [704   207   355   572]; 

[p, h] = ranksum(speed_WT, speed_HET)
nanmean(speed_WT)
nanmean(speed_HET)

% Number of trials 
allWT = find(string(xy_return_only1.Geno) == "wt");
allHET = find(string(xy_return_only1.Geno) == "het");

numel(allWT)
numel(allHET)


%% Plot figure - subplot with heatmap of trials for each animal

all_animals = unique(ALL_XYLOOM_TABLE.Animal);
nani = numel(all_animals);

figure
for k = 1:nani
    
    all_ani = find(string(ALL_XYLOOM_TABLE.Animal) == all_animals{k});
    subplot(nani,1,k)
    imagesc(cell2mat(ALL_XYLOOM_TABLE{all_ani, 5}))
%     colormap(redblue)
    hold on 
    plot([175 175],[0 15], 'y', 'LineWidth', 1.7)
    box off
    axis off
    title(string(all_animals{k}))

end


%% P5 -  Plot of the 'mean' of all trials grouped by L2M. 

% values for changing the colour of the lines from L2M =1 to L2M=5. 
vv1 = 0.45; 
vv2 = 0.17;

%Define the starting colour.
% col = [1 0.4471, 0.1255];
col = [1 0.2 0.2];
% col = [1 0 1];

figure
% col_WT = [0 0 0];
col_HET = [0 0 0];

% Run through the 5 L2M options. 
for j = 1:5
       
speed_WT = [];
speed_HET = []; 

for i = 1:n_ret
    if string(xy_return2.Geno{i}) == "wt" && xy_return2.Looms2Max{i} ==j 
        G = cell2mat(ALL_XYLOOM2{i,5});
        speed_WT = vertcat(speed_WT, G); 
    elseif string(xy_return2.Geno{i}) == "het" && xy_return2.Looms2Max{i} ==j 
        F = cell2mat(ALL_XYLOOM2{i,5});
        speed_HET = vertcat(speed_HET, F);
    end
end

subplot(2,1,1)

if ~isempty(speed_WT)
%     if numel(speed_WT(:,1))>1
%         mWT = mean(speed_WT);
%         n_WT = numel(speed_WT(:,1));
%     elseif numel(speed_WT(:,1))==1
%         mWT = speed_WT; 
%         n_WT = numel(speed_WT(:,1));
%     end 
n_WT = 50;

plot(mWT, 'Color', col_HET, 'LineWidth', 1.5);
hold on
box off
plot([rowsb4 rowsb4], [0 n_WT+10], 'k:', 'LineWidth', lw)
plot([rowsb4+lf rowsb4+lf], [0 n_WT+10], 'k:', 'LineWidth', lw)
plot([rowsb4+lf*2 rowsb4+lf*2], [0 n_WT+10], 'k:', 'LineWidth', lw)
plot([rowsb4+lf*3 rowsb4+lf*3], [0 n_WT+10], 'k:', 'LineWidth', lw)
plot([rowsb4+lf*4 rowsb4+lf*4], [0 n_WT+10], 'k:', 'LineWidth', lw)
plot([rowsb4+lf*5 rowsb4+lf*5], [0 n_WT+10], 'k:', 'LineWidth', lw)
% axis([30 550 0 n_WT])
xticks([])
ax = gca;
ax.FontSize = 18;
ax.TickDir = 'out';
ax.LineWidth = 1.2;
ylim([0 45])

end 

subplot(2,1,2)
mHET = mean(speed_HET);
% n_HET = numel(speed_HET(:,1));
n_HET = 50;

plot(mHET, 'Color', col_HET, 'LineWidth', 1.5)
hold on 

if j == 1
        col_HET = col_HET + (col*vv1);  
elseif j >1 
      col_HET = col_HET + (col*vv2);   
end 

box off
plot([rowsb4 rowsb4], [0 n_HET+10], 'k:', 'LineWidth', lw)
plot([rowsb4+lf rowsb4+lf], [0 n_HET+10], 'k:', 'LineWidth', lw)
plot([rowsb4+lf*2 rowsb4+lf*2], [0 n_HET+10], 'k:', 'LineWidth', lw)
plot([rowsb4+lf*3 rowsb4+lf*3], [0 n_HET+10], 'k:', 'LineWidth', lw)
plot([rowsb4+lf*4 rowsb4+lf*4], [0 n_HET+10], 'k:', 'LineWidth', lw)
plot([rowsb4+lf*5 rowsb4+lf*5], [0 n_HET+10], 'k:', 'LineWidth', lw)
% axis([30 550 0 n_HET])
xticks([])
ax = gca;
ax.FontSize = 18;
ax.TickDir = 'out';
ax.LineWidth = 1.2;
ylim([0 45])

end 



%%

%% STATISTICAL TESTS % % % % % % % %  - xy_return - pooled data.

% Found on the internet: 
% "I personally recommend Kolmogorov Smirnoff for sample sizes above 30
%and Shapiro Wilk for sample sizes below 30.."

% Number of WT/ HET trials in xy_return - double check above! Should be the same :) 
% allWT = find(string(xy_return.Geno) == "wt" );  % & xy_return.Trial ==1 % & cell2mat(xy_return.Looms2Max) ==1
% allHET = find(string(xy_return.Geno) == "het");  % & xy_return.Trial ==1

allWT = find(string(xy_return.Geno) == "wt"); % & cell2mat(xy_return.speedat) >2  & cell2mat(xy_return.ReturnToShelter)==1));
allHET = find(string(xy_return.Geno) == "het"); % & cell2mat(xy_return.speedat) >2  & cell2mat(xy_return.ReturnToShelter)==1));

% dataWT = log(cell2mat(xy_return.DeltaImmed(allWT)));
% dataHET = log(cell2mat(xy_return.DeltaImmed(allHET)));

dataWT = (cell2mat(xy_return.MaxAcc(allWT)));
dataHET = (cell2mat(xy_return.MaxAcc(allHET)));

% 1 - plot data
% figure; hist(data);

% 2 - test normality with Ks test. - more than 30 samples.
% [h,p] =kstest(dataWT)
% [h,p] =kstest(dataHET)

% dataWT = WTVALS;
% dataHET = HETVALS;

% Less than 30 samples
[H, pValue] = swtest(dataWT)
[H, pValue] = swtest(dataHET)

% 3 - Levene test for homogenity of variance. 
nWT = numel(dataWT);
nHET = numel(dataHET);

col1 = vertcat(dataWT, dataHET);
col2 = vertcat(ones(nWT,1), ones(nHET,1)*2);

X = horzcat(col1, col2);

%Levene's test for variance:
Levenetest(X)

% Multiple different tests comparing the mean:
% Mann whitney U test:
mwwtest(dataWT', dataHET')

% Wilcoxon RankSum
nanmean(dataWT)
nanmean(dataHET)
ranksum(dataWT, dataHET)

% Welch t-test with unequal variance
[p, h] = ttest2(dataWT, dataHET, 'Vartype', 'unequal')

% Kolmogorov smirnoff test for uneven distributions
[h, p] = kstest2(dataWT, dataHET)


%% % % % % % % % % % % % FOR ALL TRIALS - ANIMAL AVERAGES - animal_xy_table

allWT = find(string(animal_xy_table.Geno) == "wt");
allHET = find(string(animal_xy_table.Geno) == "het");

% Data from animal_xy_table
dataWT = (animal_xy_table.MaxAcc(allWT));
dataHET = (animal_xy_table.MaxAcc(allHET));

% 2 - test normality with K-S test. - less than 30 samples.
[H, pValue] = swtest(dataWT)
[H, pValue] = swtest(dataHET)

% 3 - Levene test for homogenity of variance. 
nWT = numel(dataWT);
nHET = numel(dataHET);

col1 = vertcat(dataWT, dataHET);
col2 = vertcat(ones(nWT,1), ones(nHET,1)*2);

X = horzcat(col1, col2);

%Levene's test for variance:
Levenetest(X)

% Multiple different tests comparing the mean:
% Mann whitney U test:
mwwtest(dataWT', dataHET')

% Wilcoxon RankSum
nanmean(dataWT)
nanmean(dataHET)
ranksum(dataWT, dataHET)

% Welch t-test with unequal variance
[p, h] = ttest2(dataWT, dataHET, 'Vartype', 'unequal')

[h, p] = kstest2(dataWT, dataHET)

%% % % % % % % % % % % % FOR ALL TRIALS - looms2max_ l2m_array
allWT = find((l2m_array(:,9)) == 1);
allHET =  find((l2m_array(:,9)) == 2);

dataWT = l2m_array(allWT,2);
dataHET = l2m_array(allHET,2);

% 3 - Test for normality - less than 30 samples. 
% [H, pValue] = swtest(dataWT)
% [H, pValue] = swtest(dataHET)

% 2 - test normality with K-S test. - less than 30 samples.
[H, pValue] = swtest(dataWT)
[H, pValue] = swtest(dataHET)

% 3 - Levene test for homogenity of variance. 
nWT = numel(dataWT);
nHET = numel(dataHET);

col1 = vertcat(dataWT, dataHET);
col2 = vertcat(ones(nWT,1), ones(nHET,1)*2);

X = horzcat(col1, col2);

%Levene's test for equal variance:
Levenetest(X)

% Multiple different tests comparing the mean:
% Mann whitney U test:
mwwtest(dataWT', dataHET')

% Wilcoxon RankSum
nanmean(dataWT)
nanmean(dataHET)
ranksum(dataWT, dataHET)

% Welch t-test with unequal variance
[p, h] = ttest2(dataWT, dataHET, 'Vartype', 'unequal')

%%  ALL TRIALS - 

allWT = find(string(all_xy_analysis.Geno) == "wt"); % & cell2mat(xy_return.speedat) >2  & cell2mat(xy_return.ReturnToShelter)==1));
allHET = find(string(all_xy_analysis.Geno) == "het"); % & cell2mat(xy_return.speedat) >2  & cell2mat(xy_return.ReturnToShelter)==1));

dataWT = (cell2mat(all_xy_analysis.TimeToMaxSp(allWT)));
dataHET = (cell2mat(all_xy_analysis.TimeToMaxSp(allHET)));

nanmean(dataWT)
nanmean(dataHET)
[p, h] = ranksum(dataWT, dataHET)
[h, p] = kstest2(dataWT, dataHET)

%% REMOVE ALL WHERE mouse IN SHELTER WHEN LOOM HAPPENS! 

all_in  = find(cell2mat(all_xy_analysis.DShelt_Start) <10);
all_xy_analysis(all_in, :) = []; 
ALL_XYLOOM_TABLE(all_in, :) = []; 

%% ADD DELTA IMMED TO ANIMAL_XY_TABLE

%   all_animals = unique(xy_return.Animal); 
%   n_animals = numel(all_animals); 
%   
%   
%   for i = 1:n_animals
%       ani = all_animals{i};
%       an_rows = find(string(xy_return.Animal) == ani);
%       ani_vals = log(cell2mat(xy_return.DeltaImmed(an_rows))); 
%       mean_ani = nanmean(ani_vals);
%       row = find(animal_xy_table.Animal == ani);
%       animal_xy_table.LogDeltaImmed(row) = mean_ani; 
%   end

%% For simple plotting of a simple trial 

trial_num = 1; 
plot(speed_HET(trial_num,:)', 'r')
hold on 
plot(speed_WT(trial_num, :)', 'k')


%% HEATMAP - unsorted trials - shown in chronological order

speed_WT = [];
speed_HET = []; 

for i = 1:n_ret
%     if (xy_return.Trial(i))<=1
    if string(ALL_XYLOOM.Geno{i}) == "wt"  
        G = cell2mat(ALL_XYLOOM{i,5});
        speed_WT = vertcat(speed_WT, G); 
    elseif string(ALL_XYLOOM.Geno{i}) == "het"  
        F = cell2mat(ALL_XYLOOM{i,5});
        speed_HET = vertcat(speed_HET, F);
    end
%     end 
end

% Make plot with 2 subplots - top = WT, bottom = HET. 
subplot(2,1,1)
imagesc(speed_WT)
hold on 
plot([rowsb4 rowsb4], [0 80], 'w:', 'LineWidth', 1.5)
plot([rowsb4+lf rowsb4+lf], [0 80], 'w:', 'LineWidth', 1)
plot([rowsb4+lf*2 rowsb4+lf*2], [0 80], 'w:', 'LineWidth', 1)
plot([rowsb4+lf*3 rowsb4+lf*3], [0 80], 'w:', 'LineWidth', 1)
plot([rowsb4+lf*4 rowsb4+lf*4], [0 80], 'w:', 'LineWidth', 1)
plot([rowsb4+lf*5 rowsb4+lf*5], [0 80], 'w:', 'LineWidth', 1)
axis off
box off
colormap(redblue)
caxis([0 80])
title('WT')

subplot(2,1,2)
imagesc(speed_HET)
hold on 
plot([rowsb4 rowsb4], [0 115], 'w:', 'LineWidth', 1.5)
plot([rowsb4+lf rowsb4+lf], [0 115], 'w:', 'LineWidth', 1)
plot([rowsb4+lf*2 rowsb4+lf*2], [0 115], 'w:', 'LineWidth', 1)
plot([rowsb4+lf*3 rowsb4+lf*3], [0 115], 'w:', 'LineWidth', 1)
plot([rowsb4+lf*4 rowsb4+lf*4], [0 115], 'w:', 'LineWidth', 1)
plot([rowsb4+lf*5 rowsb4+lf*5], [0 115], 'w:', 'LineWidth', 1)
axis off
box off
colormap(redblue)
caxis([0 80])
title('HET')


%% P12 - Subplot with (a) chrono trials and (b) ordered heatmap  and (c) Mean + SEM of trials for each animal

  all_animals = unique(ALL_XYLOOM_TABLE.Animal); 
  n_animals = numel(all_animals); 

  for j = 1:n_animals
      animal = all_animals{j};
      
      % All trials for that animal ordered by T2M: 
      speed_ani_ord = [];
      
      for i = 1:n
          if string(ALL_XYLOOM_TABLE_2.Animal{i}) == animal %&& ALL_XYLOOM_TABLE_2.T2M{i} > 180 
              G = cell2mat(ALL_XYLOOM_TABLE_2{i,5});
              speed_ani_ord = vertcat(speed_ani_ord, G);
          end
      end
      
      %All trials for that animal chronologically: 
      speed_ani = [];
      
      for i = 1:n
          if string(ALL_XYLOOM_TABLE.Animal{i}) == animal  %&& ALL_XYLOOM_TABLE.T2M{i} > 180 
              G = cell2mat(ALL_XYLOOM_TABLE{i,5});
              speed_ani = vertcat(speed_ani, G); 
          end
      end
      
      n_HET = numel(speed_ani(:,1));
      
      figure
      subplot(3,1,2)
      imagesc(speed_ani_ord)
      colorbar
      
      hold on
      plot([rowsb4 rowsb4], [0 n_HET+10], 'w:', 'LineWidth', lw)
      plot([rowsb4+lf rowsb4+lf], [0 n_HET+10], 'w:', 'LineWidth', lw)
      plot([rowsb4+lf*2 rowsb4+lf*2], [0 n_HET+10], 'w:', 'LineWidth', lw)
      plot([rowsb4+lf*3 rowsb4+lf*3], [0 n_HET+10], 'w:', 'LineWidth', lw)
      plot([rowsb4+lf*4 rowsb4+lf*4], [0 n_HET+10], 'w:', 'LineWidth', lw)
      plot([rowsb4+lf*5 rowsb4+lf*5], [0 n_HET+10], 'w:', 'LineWidth', lw)
      xticks([60, 120, 180, 240, 300, 360, 420, 480, 540, 600, 660, 720, 780, 840, 900, 960, 1020, 1080])
      xticklabels({'-2', '-1', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15'})
      xlabel('Time from loom initiation - seconds')
      xticks([])
      title('Response Speed - T2M')
      ax= gca;
      ax.FontSize =12;
      colormap(redblue)
      
      subplot(3,1,1)
      imagesc(speed_ani)
      colorbar
      colormap(redblue)
      hold on
      plot([rowsb4 rowsb4], [0 n_HET+10], 'w:', 'LineWidth', lw)
      plot([rowsb4+lf rowsb4+lf], [0 n_HET+10], 'w:', 'LineWidth', lw)
      plot([rowsb4+lf*2 rowsb4+lf*2], [0 n_HET+10], 'w:', 'LineWidth', lw)
      plot([rowsb4+lf*3 rowsb4+lf*3], [0 n_HET+10], 'w:', 'LineWidth', lw)
      plot([rowsb4+lf*4 rowsb4+lf*4], [0 n_HET+10], 'w:', 'LineWidth', lw)
      plot([rowsb4+lf*5 rowsb4+lf*5], [0 n_HET+10], 'w:', 'LineWidth', lw)
      %       xticks([60, 120, 180, 240, 300, 360, 420, 480, 540, 600, 660, 720, 780, 840, 900, 960, 1020, 1080])
      %       xticklabels({'-2', '-1', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15'})
      %       xlabel('Time from loom initiation - seconds')
      title('Response Speed - Chronolgical')
      ax = gca;
      ax.FontSize  =12;
      colormap(redblue)
      caxis([0 80])
      
      % MEAN + SEM 
      nrows = numel(speed_ani(:,1));
      mean_animal = mean(speed_ani);
      
      x = (1:1:780);
      sem_animal = std(speed_ani)/sqrt(nrows);
      y1 = mean_animal+sem_animal;
      y2 = mean_animal-sem_animal;
      
      subplot(3,1,3)
      plot(x, y1, 'w')
      hold on
      plot(x, y2, 'w')
      patch([x fliplr(x)], [y1 fliplr(y2)], 'k', 'FaceAlpha', 0.2, 'EdgeColor', 'none')
      plot(mean_animal', 'k', 'LineWidth', 1.3)
      plot([rowsb4 rowsb4], [0 n_HET+10], 'k:', 'LineWidth', lw)
      plot([rowsb4+lf rowsb4+lf], [0 n_HET+10], 'k:', 'LineWidth', lw)
      plot([rowsb4+lf*2 rowsb4+lf*2], [0 n_HET+10], 'k:', 'LineWidth', lw)
      plot([rowsb4+lf*3 rowsb4+lf*3], [0 n_HET+10], 'k:', 'LineWidth', lw)
      plot([rowsb4+lf*4 rowsb4+lf*4], [0 n_HET+10], 'k:', 'LineWidth', lw)
      plot([rowsb4+lf*5 rowsb4+lf*5], [0 n_HET+10], 'k:', 'LineWidth', lw)
      xticks([60, 120, 180, 240, 300, 360, 420, 480, 540, 600, 660, 720, 780])
      xticklabels({'-2', '-1', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'})
      axis([0 800 0 n_HET])
      title('Response Speed - Mean and SEM')
      xlabel('Time - s')
      ylabel('Speed - cm/s')
      
      sgtitle(string(animal))
      
  end


  
  %% P22 - Heatmap during  Multiloom trial - eg banana

% convert T2M from seconds to frames
for i = 1:n
    ALL_XYLOOM_TABLE.T2M{i} = (ALL_XYLOOM_TABLE.T2M{i}*60)+180;
end 


for i = 1:n
    t2max = ALL_XYLOOM_TABLE.T2M{i}; %+0.1667
    if t2max <= lf+rowsb4
        ALL_XYLOOM_TABLE.Looms2Max{i} = 1; 
    elseif t2max <= (lf*2)+rowsb4
        ALL_XYLOOM_TABLE.Looms2Max{i} = 2;
    elseif t2max <= (lf*3)+rowsb4
        ALL_XYLOOM_TABLE.Looms2Max{i} = 3;
    elseif t2max <= (lf*4)+rowsb4
        ALL_XYLOOM_TABLE.Looms2Max{i} = 4;
    elseif t2max <= (lf*5)+rowsb4
        ALL_XYLOOM_TABLE.Looms2Max{i} = 5;
    elseif t2max >(lf*5)+rowsb4 && ALL_XYLOOM_TABLE.MaxSp{i}>20
        ALL_XYLOOM_TABLE.Looms2Max{i} = 6;
    elseif t2max >(lf*5)+rowsb4 && ALL_XYLOOM_TABLE.MaxSp{i}<20 % NO RESPONSE 
        ALL_XYLOOM_TABLE.Looms2Max{i} = 7;
    end 
end 


% Combine
ALL_XYLOOM_TABLE = vertcat(a1, ALL_XYLOOM_TABLE);
details = ALL_XYLOOM_TABLE(:, [1,2,3,4,6,7,8,9]);
n = height(ALL_XYLOOM_TABLE);

lw = 1.5;

ALL_XYLOOM_TABLE = sortrows(ALL_XYLOOM_TABLE, 7);

speed_WT = [];
speed_HET = []; 

for i = 1:n
    if string(ALL_XYLOOM_TABLE.Geno{i}) == "wt"  
        G = cell2mat(ALL_XYLOOM_TABLE{i,5});
        speed_WT = vertcat(speed_WT, G); 
    elseif string(ALL_XYLOOM_TABLE.Geno{i}) == "het"  
        F = cell2mat(ALL_XYLOOM_TABLE{i,5});
        speed_HET = vertcat(speed_HET, F);
    end
end



figure;
% subplot(2,1,1)
imagesc(speed_WT)
hold on 
plot([rowsb4 rowsb4], [0 80], 'w:', 'LineWidth', 1.5)
plot([rowsb4+lf rowsb4+lf], [0 80], 'w:', 'LineWidth', 1.5)
plot([rowsb4+lf*2 rowsb4+lf*2], [0 80], 'w:', 'LineWidth', 1.5)
plot([rowsb4+lf*3 rowsb4+lf*3], [0 80], 'w:', 'LineWidth', 1.5)
plot([rowsb4+lf*4 rowsb4+lf*4], [0 80], 'w:', 'LineWidth', 1.5)
plot([rowsb4+lf*5 rowsb4+lf*5], [0 80], 'w:', 'LineWidth', 1.5)
axis off
box off
colormap(redblue)
caxis([0 80])
f = gcf; 
n_h = numel(speed_WT(:,1));
f.Position = [100 600 750 n_h*8];


f2 = figure;
imagesc(speed_HET(1:end, :))
hold on 
plot([rowsb4 rowsb4], [0 115], 'w:', 'LineWidth', 1.5)
plot([rowsb4+lf rowsb4+lf], [0 115], 'w:', 'LineWidth', 1.5)
plot([rowsb4+lf*2 rowsb4+lf*2], [0 115], 'w:', 'LineWidth', 1.5)
plot([rowsb4+lf*3 rowsb4+lf*3], [0 115], 'w:', 'LineWidth', 1.5)
plot([rowsb4+lf*4 rowsb4+lf*4], [0 115], 'w:', 'LineWidth', 1.5)
plot([rowsb4+lf*5 rowsb4+lf*5], [0 115], 'w:', 'LineWidth', 1.5)
axis off
box off
colormap(redblue)
caxis([0 80])
n_h = numel(speed_HET(:,1));
f2.Position = [100 600 750 n_h*8];



%% P13 - 'DOT PLOT' of Max Speed vs Time to Max Speed - All Trials.
  
% Function 
for val = 3:6 %6:22 % = range of all_xy_analysis columns that you want to assess - ANIMAL AVERAGES.
make_boxdotplot(animal_xy_table, val, col, model)
end 


% WT = Black dots.
% HET = Red dots.  or Magenta dots for Cul3

figure
for j = 1:n
    x_val = ALL_XYLOOM_TABLE.MaxSp{j};
    y_val = ALL_XYLOOM_TABLE.T2M{j}; 
    if string(ALL_XYLOOM_TABLE.Geno{j}) == "wt"
        marker = 'o';
        col = 'k';
    else
        marker = 'o'; 
%         col = [255/255 114/255 32/255];
        col = 'r'; 
    end 
    plot(y_val, x_val, marker, 'Color', col, 'MarkerSize', 8)
    hold on 
end

plot([rowsb4 rowsb4], [0 200], 'k:', 'LineWidth', 1.5)
plot([rowsb4+lf rowsb4+lf], [0 200], 'k:', 'LineWidth', 1)
plot([rowsb4+lf*2 rowsb4+lf*2], [0 200], 'k:', 'LineWidth', 1)
plot([rowsb4+lf*3 rowsb4+lf*3], [0 200], 'k:', 'LineWidth', 1)
plot([rowsb4+lf*4 rowsb4+lf*4], [0 200], 'k:', 'LineWidth', 1)
plot([rowsb4+lf*5 rowsb4+lf*5], [0 200], 'k:', 'LineWidth', 1)
xticks([rowsb4-fps*2, rowsb4-fps, rowsb4, rowsb4+fps, rowsb4+fps*2, rowsb4+fps*3, rowsb4+fps*4, rowsb4+fps*5, rowsb4+fps*6, rowsb4+fps*7, rowsb4+fps*8, rowsb4+fps*9, rowsb4+fps*10, rowsb4+fps*11, rowsb4+fps*12, rowsb4+fps*13, rowsb4+fps*14, rowsb4+fps*15])
xticklabels({'-2', '-1', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15'})
xlabel('Time - s')
ylabel('Speed - cm/s')
ax = gca;
ax.FontSize = 24;
 axis([0 900 0 90])
box off


%% P14 - Plot 'representative' traces from one pair. 

valWT = i; 
valHET = i; 
labels = 1; 

plot_singletraceWTHET(speed_WT, speed_HET, valWT, valHET, rowsb4, lf, labels)

% FULL CODE BELOW:

% Specify which row - i.e. which trial you would like to plot for WT/HET. 
val_wt = 2; 
val_het = 2; 

figure 
plot(speed_WT(val_wt,:), 'k', 'LineWidth', 1.5)
hold on 
plot(speed_HET(val_het,:), 'm','LineWidth', 1.5)
plot([rowsb4 rowsb4], [0 200], 'k:', 'LineWidth', 1.5)
plot([rowsb4+lf rowsb4+lf], [0 200], 'k:', 'LineWidth', 1)
plot([rowsb4+lf*2 rowsb4+lf*2], [0 200], 'k:', 'LineWidth', 1)
plot([rowsb4+lf*3 rowsb4+lf*3], [0 200], 'k:', 'LineWidth', 1)
plot([rowsb4+lf*4 rowsb4+lf*4], [0 200], 'k:', 'LineWidth', 1)
plot([rowsb4+lf*5 rowsb4+lf*5], [0 200], 'k:', 'LineWidth', 1)
xticks([rowsb4-fps*2, rowsb4-fps, rowsb4, rowsb4+fps, rowsb4+fps*2, rowsb4+fps*3, rowsb4+fps*4, rowsb4+fps*5, rowsb4+fps*6, rowsb4+fps*7, rowsb4+fps*8, rowsb4+fps*9, rowsb4+fps*10, rowsb4+fps*11, rowsb4+fps*12, rowsb4+fps*13, rowsb4+fps*14, rowsb4+fps*15])
xticklabels({'-2', '-1', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15'})
xlabel('Time from loom initiation - seconds')
ylabel('Response Speed - cm/s')
set(gca, 'FontSize', 13)
title('Representative traces of response to first loom')
axis([0 780 0 70])


%% P15 - Speed of the animal AT the loom - when the loom started.

% PLOT - Speed AT loom  - versus average speed during first loom.

data = []; 
rows_b4 = []; 
for i  = 1:n
    G = cell2mat(ALL_XYLOOM_TABLE{i,5});
    plot(G)
    hold on 
    plot([180 180], [0 100], 'k:')
    x = input('Type rowsb4: ');
    rowsb4 = x; 
    rows_b4(i) = rowsb4;
    speed_at_loom = mean(G(rowsb4)); 
    speed_L1 = mean(G(rowsb4:rowsb4+lf));
    delta = speed_L1/speed_at_loom; 
    data = vertcat(data, delta);
    hold off
end 
 
WT_vals = data(allWT, :);
HET_vals = data(allHET, :);

mWT = nanmean(WT_vals);
mHET = nanmean(HET_vals);

figure
scatter(ones(1,nWT), WT_vals, sz, col, 'Marker', 'o', 'jitter', 'on')
hold on 
scatter(ones(1,nHET)*2, HET_vals, sz, col_H, 'Marker', 'o', 'jitter', 'on')
plot([0.8, 1, 1.2], [mWT, mWT, mWT], 'k', 'LineWidth', 2.5)
plot([1.8, 2, 2.2], [mHET, mHET, mHET], 'k', 'LineWidth', 2.5)

ranksum(WT_vals, HET_vals)


%% P16 - Scatter plot - 0.75s bins - speed per loom.

col = [0.6 0.6 0.6];
sz = 20; 
col_H = 'r';
col_H = [255/255 114/255 32/255]; % orange ptchd1
ax = [0.5 2.5 0 60];
lf = 45; 
rowsb4 = 180;

make_scatter_SpeedPerLoom(ALL_XYLOOM_TABLE, col, sz, col_H, ax, lf, rowsb4);


%% P18 - - make 'xy_aligned' - ALL_XYLOOM aligned to the end of the last loom. 

xy_aligned = zeros(n_ret, 221); 

for i = 1:n_ret
    data = cell2mat(ALL_XYLOOM{i, 5}); 
    if xy_return.Looms2Max{i} == 1
        start_row = 180; 
    elseif xy_return.Looms2Max{i} == 2
        start_row = 225;
    elseif xy_return.Looms2Max{i} == 3
        start_row = 270;
    elseif xy_return.Looms2Max{i} == 4
        start_row = 315;
    elseif xy_return.Looms2Max{i} == 5
        start_row = 360;
    elseif xy_return.Looms2Max{i} == 6
        start_row = 405;
    end 
    data2 = data(start_row-20:start_row+200); 
    xy_aligned(i, :) = data2; 
end 

labels = 1; 

% % % % % PLOT - Mean SEM aligned to last loom
plot_MeanSEM_AlignedLastLoom(xy_aligned, allWT, allHET, col, labels)

% % % % % PLOT - DotBox - Number of looms before escpae. 
make_dotbox_NLoomsB4(xy_return, col, labels)

% % % % % % STATS % % % % % % %

[p, h] = ranksum(speed_WT, speed_HET)
% setd5 = 0.0039
% Cul3 = 0.0041
%Ptchd1 = 0.0110

[h, p] = kstest2(speed_WT, speed_HET)
% setd5 = 0.0073
% CUl3 = 0.0121
% Ptchd1 = 0.0310






%% P19 - ERRORBAR - Value from all_xy_analysis/ xy_return versus Looms Before Escape

val = 6; % Which column (variable) from xy_analysis you would like to plot against the trial #. 

make_errorbar_var_per_loom(all_xy_analysis, col, val);


%%  P20 - MEAN SEM DOTs + SEM LINE - VERSUS L2M -  for Max speed versus L2M 

allWT = find(string(xy_return.Geno) =="wt");
allHET = find(string(xy_return.Geno) =="het");

% WT 
n_trialsWT = 5; 
dWT = zeros(1, n_trialsWT); %data
sWT = zeros(1, n_trialsWT); % SEM

for i = 1:5
    vals = find(cell2mat(xy_return.Looms2Max) == i & string(xy_return.Geno) == "wt");
    data = cell2mat(xy_return.MaxSpEscape(vals)); 
    dWT(i) = mean(data);
    sWT(i) = std(data)/sqrt(numel(vals));
end

% HET 
n_trialsHET = 5;
dHET = zeros(1, n_trialsHET); %data
sHET = zeros(1, n_trialsHET); % SEM

for i = 1:5
    vals = find(cell2mat(xy_return.Looms2Max) == i & string(xy_return.Geno) == "het");
    data = cell2mat(xy_return.MaxSpEscape(vals));
    dHET(i) = mean(data);
    sHET(i) = std(data)/sqrt(numel(vals));
end


% PLOT 

figure
errorbar(1:1:n_trialsWT, dWT, sWT, 'o', 'CapSize', 0, 'Color', [0 0 0], 'MarkerFaceColor', [0.7 0.7 0.7],'MarkerEdgeColor', 'none',  'MarkerSize', 10, 'LineWidth', 1.75)
hold on 
errorbar(1:1:n_trialsHET, dHET, sHET, 'o', 'CapSize', 0, 'Color', [1 0.8 0.05], 'MarkerFaceColor', [1 0.8 0.8], 'MarkerEdgeColor','none', 'MarkerSize', 10, 'LineWidth', 1.75)
errorbar(1:1:n_trialsWT, dWT, sWT, 'o', 'CapSize', 0, 'Color', [0.4 0.4 0.4], 'Marker', 'none', 'LineWidth', 1.75)
errorbar(1:1:n_trialsHET, dHET, sHET, 'o', 'CapSize', 0, 'Color', [1 0.4 0.05],'Marker', 'none', 'LineWidth', 1.75)

% CREATE FIT LINES - LINEAR FIT - y = ax+b % % % % % % % % % %  % % % % % % % %  % % % % % % % %  % % % % % % % %  % % % % % % % %  % % % % % % % % 
% 
[fitresult, gof] = createFits(dWT, dHET, col);
legend off

axis([0.5 5.5 30 80])
box off
% yticks([1,2,3,4,5])
xticks([1,2,3,4,5])
xlabel('Looms to Escape')
ylabel('Max. Speed (cm s^-1)')
ax = gca;
ax.FontSize = 18; 
hold off
ax.TickDir = 'out'; 
ax.LineWidth = 1.2;
ax.TickLength = [0.025 0.025];
f =gcf;
f.Position = [746   598   287   268]; 
